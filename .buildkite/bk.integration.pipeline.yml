# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json

env:
  DOCKER_REGISTRY: "docker.elastic.co"
  VAULT_PATH: "kv/ci-shared/observability-ingest/cloud/gcp"
  ASDF_MAGE_VERSION: 1.14.0

steps:
  - label: Start ESS stack for integration tests
    key: integration-ess
    env:
      ASDF_TERRAFORM_VERSION: 1.9.2
    command: |
      #!/usr/bin/env bash
      set -euo pipefail
      source .buildkite/scripts/steps/ess_start.sh
    artifact_paths:
      - test_infra/ess/*.tfstate
      - test_infra/ess/*.lock.hcl
    agents:
      image: "docker.elastic.co/ci-agent-images/platform-ingest/buildkite-agent-beats-ci-with-hooks:0.5"
      useCustomGlobalHooks: true

  - group: "Stateful: Windows"
    key: integration-tests-win
    depends_on:
      - integration-ess
    steps:
      - label: "Win2022:sudo:{{matrix}}"
        depends_on:
          - packaging-windows
        command: |
          buildkite-agent artifact download build/distributions/** . --step 'packaging-windows'
          .buildkite/scripts/integration-tests.ps1 {{matrix}} true
        artifact_paths:
          - build/**
          - build/diagnostics/**
        agents:
          provider: "gcp"
          machineType: "n1-standard-8"
          image: "family/platform-ingest-elastic-agent-windows-2022"
        retry:
          automatic:
            limit: 1
        matrix:
          - default
          - fleet
          - fleet-endpoint-security
          - fleet-privileged
          - standalone-upgrade
          - upgrade
          - upgrade-flavor
          - install-uninstall

      - label: "Win2022:non-sudo:{{matrix}}"
        depends_on:
          - packaging-windows
        command: |
          buildkite-agent artifact download build/distributions/** . --step 'packaging-windows'
          .buildkite/scripts/integration-tests.ps1 {{matrix}} false
        artifact_paths:
          - build/**
          - build/diagnostics/**
        agents:
          provider: "gcp"
          machineType: "n1-standard-8"
          image: "family/platform-ingest-elastic-agent-windows-2022"
        retry:
          automatic:
            limit: 1
        matrix:
          - default

      - label: "Win2025:sudo:{{matrix}}"
        depends_on:
          - packaging-windows
        command: |
          buildkite-agent artifact download build/distributions/** . --step 'packaging-windows'
          .buildkite/scripts/integration-tests.ps1 {{matrix}} true
        artifact_paths:
          - build/**
          - build/diagnostics/**
        agents:
          provider: "gcp"
          machineType: "n1-standard-8"
          image: "family/platform-ingest-elastic-agent-windows-2025"
        retry:
          automatic:
            limit: 1
        matrix:
          - default
          - fleet
          - fleet-endpoint-security
          - fleet-privileged
          - standalone-upgrade
          - upgrade
          - upgrade-flavor
          - install-uninstall

      - label: "Win2025:non-sudo:{{matrix}}"
        depends_on:
          - packaging-windows
        command: |
          buildkite-agent artifact download build/distributions/** . --step 'packaging-windows'
          .buildkite/scripts/integration-tests.ps1 {{matrix}} false
        artifact_paths:
          - build/**
          - build/diagnostics/**
        retry:
          automatic:
            limit: 1
        agents:
          provider: "gcp"
          machineType: "n1-standard-8"
          image: "family/platform-ingest-elastic-agent-windows-2025"
        matrix:
          - default

  - group: "Stateful:Ubuntu"
    key: integration-tests-ubuntu
    depends_on:
      - integration-ess
    steps:
      - label: "x86_64:non-sudo: {{matrix}}"
        depends_on: packaging-ubuntu-x86-64
        command: |
          buildkite-agent artifact download build/distributions/** . --step 'packaging-ubuntu-x86-64'
          .buildkite/scripts/steps/integration_tests_tf.sh {{matrix}} false
        artifact_paths:
          - build/**
          - build/diagnostics/**
        retry:
          automatic:
            limit: 1
        agents:
          provider: "gcp"
          machineType: "n1-standard-8"
          image: "family/platform-ingest-elastic-agent-ubuntu-2404"
        matrix:
          - default

      - label: "x86_64:sudo: {{matrix}}"
        depends_on:
          - packaging-ubuntu-x86-64
        # due to deb group present in matrix tar.gz and deb packages artifacts are required
        command: |
          buildkite-agent artifact download build/distributions/** . --step packaging-ubuntu-x86-64
          .buildkite/scripts/steps/integration_tests_tf.sh {{matrix}} true
        artifact_paths:
          - build/**
          - build/diagnostics/**
        retry:
          automatic:
            limit: 1
        agents:
          provider: "gcp"
          machineType: "n1-standard-8"
          image: "family/platform-ingest-elastic-agent-ubuntu-2404"
        matrix:
          - default
          - upgrade
          - upgrade-flavor
          - standalone-upgrade
          - fleet
          - fleet-endpoint-security
          - fleet-airgapped
          - fleet-airgapped-privileged
          - fleet-privileged
          - fleet-upgrade-to-pr-build
          - install-uninstall
          - fqdn
          - deb
          - container

      - label: "arm:sudo: {{matrix}}"
        depends_on:
          - packaging-ubuntu-arm64
        command: |
          buildkite-agent artifact download build/distributions/** . --step 'packaging-ubuntu-arm64'
          .buildkite/scripts/steps/integration_tests_tf.sh {{matrix}} true
        artifact_paths:
          - build/**
          - build/diagnostics/**
        agents:
          provider: "aws"
          imagePrefix: "platform-ingest-beats-ubuntu-2404-aarch64"
          instanceType: "m6g.2xlarge"
        retry:
          automatic:
            limit: 1
        matrix:
          - default
          - upgrade
          - upgrade-flavor
          - standalone-upgrade
          - fleet
          # ARM tests are enabled for only selected groups in order to save resources
          # - fleet-endpoint-security
          # - fleet-airgapped
          # - fleet-airgapped-privileged
          # - fleet-privileged
          # - fleet-upgrade-to-pr-build
          # - install-uninstall
          # - fqdn
          # - deb
          # - container

      - label: "arm:non-sudo: {{matrix}}"
        skip: true
        depends_on:
          - packaging-ubuntu-arm64
        command: |
          buildkite-agent artifact download build/distributions/** . --step 'packaging-ubuntu-arm64'
          .buildkite/scripts/steps/integration_tests_tf.sh {{matrix}} false
        artifact_paths:
          - build/**
          - build/diagnostics/**
        retry:
          automatic:
            limit: 1
        agents:
          provider: "aws"
          imagePrefix: "platform-ingest-beats-ubuntu-2404-aarch64"
          instanceType: "m6g.xlarge"
        matrix:
          - default

  - group: "Stateful(Sudo):RHEL8"
    key: integration-tests-rhel8
    depends_on:
      - integration-ess
    steps:
      - label: "x86_64:sudo:rpm"
        depends_on:
          - packaging-ubuntu-x86-64
        command: |
          buildkite-agent artifact download build/distributions/** . --step packaging-ubuntu-x86-64
          .buildkite/scripts/steps/integration_tests_tf.sh rpm true
        artifact_paths:
          - build/**
          - build/diagnostics/**
        retry:
          automatic:
            limit: 1
        agents:
          provider: "gcp"
          machineType: "n1-standard-8"
          image: "family/platform-ingest-elastic-agent-rhel-8"

  - group: "Kubernetes"
    key: integration-tests-kubernetes
    depends_on:
      - integration-ess
      - packaging-containers-x86-64
    steps:
      - label: "{{matrix.version}}:amd64:{{matrix.variants}}"
        env:
          K8S_VERSION: "{{matrix.version}}"
          ASDF_KIND_VERSION: "0.24.0"
          DOCKER_VARIANTS: "{{matrix.variants}}"
          TARGET_ARCH: "amd64"
          AGENT_VERSION: "9.0.0-SNAPSHOT" # Remove agent pinning once 9.0.0 is released
        command: |
          buildkite-agent artifact download build/distributions/elastic-agent-*-linux-amd64.docker.tar.gz . --step 'packaging-containers-x86-64'
          .buildkite/scripts/steps/integration_tests_tf.sh kubernetes false
        artifact_paths:
          - build/**
          - build/diagnostics/**
        retry:
          automatic:
            limit: 1
        agents:
          provider: "gcp"
          machineType: "n1-standard-4"
          image: "family/platform-ingest-elastic-agent-ubuntu-2404"
          diskSizeGb: 80
        matrix:
          setup:
            variants:
            - "basic,wolfi,complete,complete-wolfi,service,cloud"
            version:
            - v1.27.16
            - v1.28.9
            - v1.29.8
            - v1.30.8
            - v1.31.0

  - label: ESS stack cleanup
    depends_on:
      - integration-tests-ubuntu
      - integration-tests-win
      - integration-tests-rhel8
      - integration-tests-kubernetes
    allow_dependency_failure: true
    command: |
      buildkite-agent artifact download "test_infra/ess/**" . --step "integration-ess"
      ls -lah test_infra/ess
      .buildkite/scripts/steps/ess_down.sh
    agents:
      image: "docker.elastic.co/ci-agent-images/platform-ingest/buildkite-agent-beats-ci-with-hooks:0.5"
      useCustomGlobalHooks: true

  - label: Aggregate test reports
    # Warning: The key has a hook in pre-command
    key: aggregate-reports
    depends_on:
      - integration-tests-ubuntu
      - integration-tests-win
      - integration-tests-rhel8
      - integration-tests-kubernetes
    allow_dependency_failure: true
    command: |
      buildkite-agent artifact download "build/*.xml" .
      buildkite-agent artifact download "build\*.xml" .
    agents:
      image: "docker.elastic.co/ci-agent-images/platform-ingest/buildkite-agent-beats-ci-with-hooks:0.5"
      useCustomGlobalHooks: true
    soft_fail:
      - exit_status: "*"
    plugins:
      - test-collector#v1.10.1:
          files: "build/*.xml"
          format: "junit"
          branches: "main"
          debug: true
