# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json

steps:
<<<<<<< HEAD
  - label: "Example test"
    command: echo "Hello!"
=======
  - input: "Build parameters"
    if: build.env("ManifestURL") == null
    fields:
      - text: "ManifestURL"
        key: "ManifestURL"
        default: ""
        required: true
        hint: "Link to the build manifest URL."
      - select: "Mage verbose"
        key: "MAGEFILE_VERBOSE"
        required: "false"
        options:
          - label: "True"
            value: "1"
          - label: "False"
            value: "0"
        hint: "Increase verbosity of the mage commands, defaults to 0"
      - select: "DRA Workflow"
        key: "DRA_WORKFLOW"
        required: "true"
        options:
          - label: "snapshot"
            value: "snapshot"
          - label: "staging"
            value: "staging"
        hint: "What workflow of the DRA release process this build is going to be triggered for"
      - text: "DRA Version"
        key: "DRA_VERSION"
        required: "true"
        default: ""
        hint: "The packaging version to use"
      - select: "DRA DRY-RUN"
        key: "DRA_DRY_RUN"
        required: "false"
        options:
          - label: "True"
            value: "--dry-run"
          - label: "False"
            value: ""
        hint: "If the DRA release manager script would actually publish anything or just print"

  - wait: ~
    if: build.env("ManifestURL") == null

  - group: ":Packaging Artefacts"
    key: "package"
    steps:
      - label: ":package: Cross Building and package elastic-agent"
        key: package_elastic-agent
        agents:
          provider: "gcp"
          machineType: "c2-standard-16"
          diskSizeGb: 400
        command: |
          if [[ -z "${ManifestURL}" ]]; then
            export ManifestURL=$(buildkite-agent meta-data get ManifestURL --default "")
            if [[ -z "${ManifestURL}" ]]; then
              echo ":broken_heart: Missing ManifestURL variable or empty string provided"
              exit 1
            fi
          fi
          if [[ -z "${MAGEFILE_VERBOSE}" ]]; then
            export MAGEFILE_VERBOSE=$(buildkite-agent meta-data get MAGEFILE_VERBOSE --default "0")
          fi
          .buildkite/scripts/steps/package.sh
        artifact_paths:
          - "build/distributions/**/*"
      - label: ":package: Package ARM elastic-agent"
        key: package_elastic-agent-arm
        agents:
          provider: "aws"
          instanceType: "t4g.2xlarge"
          imagePrefix: "core-ubuntu-2004-aarch64"
        env:
          PLATFORMS: "linux/arm64"
          PACKAGES: "docker"
        command: |
          if [[ -z "${ManifestURL}" ]]; then
            export ManifestURL=$(buildkite-agent meta-data get ManifestURL --default "")
            if [[ -z "${ManifestURL}" ]]; then
              echo ":broken_heart: Missing ManifestURL variable or empty string provided"
              exit 1
            fi
          fi
          if [[ -z "${MAGEFILE_VERBOSE}" ]]; then
            export MAGEFILE_VERBOSE=$(buildkite-agent meta-data get MAGEFILE_VERBOSE --default "0")
          fi
          .buildkite/scripts/steps/package.sh
        artifact_paths:
          - "build/distributions/**/*"

  - label: ":elastic-stack: Publishing to DRA"
    key: dra-publish
    depends_on: package
    agents:
      provider: "gcp"
    env:
      DRA_PROJECT_ID: "elastic-agent-package"
      DRA_PROJECT_ARTIFACT_ID: "agent-package"
    command: |
      echo "+++ Restoring Artifacts"
      buildkite-agent artifact download "build/**/*" .
      echo "+++ Changing permissions for the release manager"
      sudo chown -R :1000 build/distributions/
      echo "+++ Running DRA publish step"
      if [[ -z "${MAGEFILE_VERBOSE}" ]]; then
        export MAGEFILE_VERBOSE=$(buildkite-agent meta-data get MAGEFILE_VERBOSE --default "0")
      fi
      if [[ -z "${DRA_DRY_RUN}" ]]; then
        DRA_DRY_RUN=$(buildkite-agent meta-data get DRA_DRY_RUN --default "")
        export DRA_DRY_RUN
      fi
      if [[ -z "${DRA_VERSION}" ]]; then
        DRA_VERSION=$(buildkite-agent meta-data get DRA_VERSION --default "")
        export DRA_VERSION
      fi
      .buildkite/scripts/steps/dra-publish.sh
>>>>>>> c2606c7351 (Fix broken reference to common.sh and other env var references (#3162))
