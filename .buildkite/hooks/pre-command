#!/bin/bash

set -euo pipefail


DOCKER_REGISTRY_SECRET_PATH="kv/ci-shared/platform-ingest/docker_registry_prod"

if [[ "$BUILDKITE_PIPELINE_SLUG" == "elastic-agent-package" ]]; then
  if [[ "$BUILDKITE_STEP_KEY" == "package_elastic-agent" ]]; then
    export DOCKER_USERNAME_SECRET=$(vault kv get -field user "${DOCKER_REGISTRY_SECRET_PATH}")
    export DOCKER_PASSWORD_SECRET=$(vault kv get -field password "${DOCKER_REGISTRY_SECRET_PATH}")
    docker login -u "${DOCKER_USERNAME_SECRET}" -p "${DOCKER_PASSWORD_SECRET}" "${DOCKER_REGISTRY}" 2>/dev/null
    unset DOCKER_USERNAME_SECRET DOCKER_PASSWORD_SECRET
  fi
fi

# Set GCP credentials
vault kv get -format=json -field=data kv/ci-shared/observability-ingest/cloud/gcp > ./gcp.json
export GOOGLE_APPLICATION_CREDENTIALS=$(realpath ./gcp.json)
export TEST_INTEG_AUTH_GCP_SERVICE_TOKEN_FILE=$(realpath ./gcp.json)  

# ESS credentials
vault kv get -field api_key kv/ci-shared/observability-ingest/elastic-agent-ess-qa > ./apiKey
export TEST_INTEG_AUTH_ESS_APIKEY_FILE=$(realpath ./apiKey)

# Install Go TODO: mode to makefile
if ! command -v go &>/dev/null; then  
  echo "Go is not installed. Installing Go..."
  export GO_VERSION=`cat .go-version`
  curl -O https://dl.google.com/go/go$GO_VERSION.linux-amd64.tar.gz
  sudo tar -xf go$GO_VERSION.linux-amd64.tar.gz -C /usr/local
  echo 'export PATH=$PATH:/usr/local/go/bin' >> ~/.bashrc
  source ~/.bashrc
  mkdir $HOME/go
  mkdir $HOME/go/bin
  export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin  
  echo "Go has been installed."
else
  echo "Go is already installed."
fi

# Install mage
make mage