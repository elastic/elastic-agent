# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json

env:
  DOCKER_REGISTRY: "docker.elastic.co"
  VAULT_PATH: "kv/ci-shared/observability-ingest/cloud/gcp"
  ASDF_MAGE_VERSION: 1.14.0
  ASDF_GOLANG_VERSION: 1.22.6
  ASDF_TERRAFORM_VERSION: 1.9.3

steps:
  # - label: "Integration tests: packaging"
  #   key: "package-it"
  #   command: ".buildkite/scripts/steps/integration-package.sh"
  #   artifact_paths:
  #     - build/distributions/**
  #   agents:
  #     provider: "gcp"
  #     machineType: "n1-standard-8"

  - label: Start ESS stack for integration tests
    key: integration-ess
    # depends_on:
    #   - package-it
    command: |
      #!/usr/bin/env bash
      set -euo pipefail
      source .buildkite/scripts/steps/ess_start.sh
    artifact_paths:
      - test_infra/ess/*.tfstate
      - test_infra/ess/*.lock.hcl
    agents:
      provider: "gcp"
      imageProject: elastic-images-qa
      machineType: "n1-standard-2"
      image: "family/platform-ingest-elastic-agent-ubuntu-2204"

  - group: "Stateful IT (Sudo): Ubuntu"
    key: integration-tests
    depends_on:
      # - package-it
      - integration-ess
    steps:
      - label: "Default"
        key: stateful-ubuntu-default-sudo
        command: |
          buildkite-agent artifact download build/distributions/** . --step 'package-it' --build 01924359-c420-41d6-ad55-4b4be6ea551e
          .buildkite/scripts/steps/integration_tests_tf_sudo.sh "default" "^(TestAPMConfig|TestDiagnosticsOptionalValues|TestIsolatedUnitsDiagnosticsOptionalValues|TestDiagnosticsCommand|TestIsolatedUnitsDiagnosticsCommand|TestEventLogFile|TestFakeComponent|TestFakeIsolatedUnitsComponent|TestOtelFileProcessing|TestOtelLogsIngestion|TestOtelAPMIngestion|TestPackageVersion)$$"
        artifact_paths:
          - build/**
        agents:
          provider: "gcp"
          imageProject: elastic-images-qa
          machineType: "n1-standard-8"
          image: "family/platform-ingest-elastic-agent-ubuntu-2204"

      # - label: "Upgrade"
      #   key: stateful-ubuntu-upgrade-sudo
      #   command: |
      #     buildkite-agent artifact download build/distributions/** . --step 'package-it'
      #     .buildkite/scripts/steps/integration_tests_tf_sudo.sh "upgrade" "^(TestUpgradeBrokenPackageVersion|TestStandaloneUpgradeWithGPGFallback|TestStandaloneUpgradeWithGPGFallbackOneRemoteFailing|TestStandaloneUpgradeRollback|TestStandaloneUpgradeRollbackOnRestarts|TestStandaloneUpgradeFailsWhenUpgradeIsInProgress|TestStandaloneUpgradeRetryDownload|TestStandaloneUpgradeSameCommit|TestStandaloneUpgrade|TestStandaloneUpgradeUninstallKillWatcher)$$"
      #   artifact_paths:
      #     - build/**
      #   agents:
      #     provider: "gcp"
      #     imageProject: elastic-images-qa
      #     machineType: "n1-standard-8"
      #     image: "family/platform-ingest-elastic-agent-ubuntu-2204"

      # - label: "Fleet"
      #   key: stateful-ubuntu-fleet-sudo
      #   depends_on:
      #     - package-it
      #   command: |
      #     buildkite-agent artifact download build/distributions/** . --step 'package-it'
      #     ls -lah build/distributions/
      #     .buildkite/scripts/steps/integration_tests_tf_sudo.sh "fleet" "^(TestLongRunningAgentForLeaks|TestDelayEnroll|TestDelayEnrollUnprivileged|TestInstallAndCLIUninstallWithEndpointSecurity|TestInstallAndUnenrollWithEndpointSecurity|TestInstallWithEndpointSecurityAndRemoveEndpointIntegration|TestEndpointSecurityNonDefaultBasePath|TestEndpointSecurityUnprivileged|TestEndpointSecurityCannotSwitchToUnprivileged|TestEndpointLogsAreCollectedInDiagnostics|TestForceInstallOverProtectedPolicy|TestSetLogLevelFleetManaged|TestLogIngestionFleetManaged|TestMetricsMonitoringCorrectBinaries|TestEndpointAgentServiceMonitoring|TestMonitoringPreserveTextConfig|TestMonitoringLivenessReloadable|TestComponentBuildHashInDiagnostics|TestProxyURL|TestFleetManagedUpgradeUnprivileged)$$"
      #   artifact_paths:
      #     - build/**
      #   agents:
      #     provider: "gcp"
      #     imageProject: elastic-images-qa
      #     machineType: "n1-standard-8"
      #     image: "family/platform-ingest-elastic-agent-ubuntu-2204"

      # - label: "FQDN"
      #   key: stateful-ubuntu-fqdn-sudo
      #   depends_on:
      #     - package-it
      #   command: |
      #     buildkite-agent artifact download build/distributions/** . --step 'package-it'
      #     ls -lah build/distributions/
      #     .buildkite/scripts/steps/integration_tests_tf_sudo.sh "fqdn" "^(TestFQDN)$$"
      #   artifact_paths:
      #     - build/**
      #   agents:
      #     provider: "gcp"
      #     imageProject: elastic-images-qa
      #     machineType: "n1-standard-8"
      #     image: "family/platform-ingest-elastic-agent-ubuntu-2204"

      # - label: "Deb"
      #   key: stateful-ubuntu-deb-sudo
      #   depends_on:
      #     - package-it
      #   command: |
      #     buildkite-agent artifact download build/distributions/** . --step 'package-it'
      #     ls -lah build/distributions/
      #     .buildkite/scripts/steps/integration_tests_tf_sudo.sh "deb" "^(TestDebLogIngestFleetManaged|TestDebFleetUpgrade)$$"
      #   artifact_paths:
      #     - build/**
      #   agents:
      #     provider: "gcp"
      #     imageProject: elastic-images-qa
      #     machineType: "n1-standard-8"
      #     image: "family/platform-ingest-elastic-agent-ubuntu-2204"

      # - label: "Fleet Airgapped"
      #   key: stateful-ubuntu-fleet-airgapped-sudo
      #   depends_on:
      #     - package-it
      #   command: |
      #     buildkite-agent artifact download build/distributions/** . --step 'package-it'
      #     ls -lah build/distributions/
      #     .buildkite/scripts/steps/integration_tests_tf_sudo.sh "fleet-airgapped" "^(TestFleetAirGappedUpgradeUnprivileged)$$"
      #   artifact_paths:
      #     - build/**
      #   agents:
      #     provider: "gcp"
      #     imageProject: elastic-images-qa
      #     machineType: "n1-standard-8"
      #     image: "family/platform-ingest-elastic-agent-ubuntu-2204"

      # - label: "Fleet Privileged"
      #   key: stateful-ubuntu-fleet-privileged-sudo
      #   depends_on:
      #     - package-it
      #   command: |
      #     buildkite-agent artifact download build/distributions/** . --step 'package-it'
      #     ls -lah build/distributions/
      #     .buildkite/scripts/steps/integration_tests_tf_sudo.sh "fleet-privileged" "^(TestInstallFleetServerBootstrap|TestFleetManagedUpgradePrivileged)$$"
      #   artifact_paths:
      #     - build/**
      #   agents:
      #     provider: "gcp"
      #     imageProject: elastic-images-qa
      #     machineType: "n1-standard-8"
      #     image: "family/platform-ingest-elastic-agent-ubuntu-2204"

      # - label: "Fleet Airgapped Privileged"
      #   key: stateful-ubuntu-fleet-airgapped-privileged-sudo
      #   depends_on:
      #     - package-it
      #   command: |
      #     buildkite-agent artifact download build/distributions/** . --step 'package-it'
      #     ls -lah build/distributions/
      #     .buildkite/scripts/steps/integration_tests_tf_sudo.sh "fleet-airgapped-privileged" "^(TestFleetAirGappedUpgradePrivileged)$$"
      #   artifact_paths:
      #     - build/**
      #   agents:
      #     provider: "gcp"
      #     imageProject: elastic-images-qa
      #     machineType: "n1-standard-8"
      #     image: "family/platform-ingest-elastic-agent-ubuntu-2204"

  - label: ESS stack cleanup
    depends_on: integration-tests
    allow_dependency_failure: true
    command: |
      buildkite-agent artifact download "test_infra/ess/**" . --step "integration-ess"
      ls -lah test_infra/ess
      .buildkite/scripts/steps/ess_down.sh
    agents:
      provider: "gcp"
      imageProject: elastic-images-qa
      machineType: "n1-standard-2"
      image: "family/platform-ingest-elastic-agent-ubuntu-2204"

  # - label: "Serverless integration test"
  #   key: "serverless-integration-tests"
  #   concurrency_group: elastic-agent-extended-testing/serverless-integration
  #   concurrency: 8
  #   env:
  #     # we run each step in a different data center to spread the load
  #     TEST_INTEG_AUTH_GCP_DATACENTER: "us-central1-a"
  #   command: ".buildkite/scripts/steps/integration_tests.sh serverless integration:single TestLogIngestionFleetManaged" #right now, run a single test in serverless mode as a sort of smoke test, instead of re-running the entire suite
  #   artifact_paths:
  #     - "build/TEST-**"
  #     - "build/diagnostics/*"
  #   agents:
  #     provider: "gcp"
  #     machineType: "n1-standard-8"
  #   notify:
  #     - github_commit_status:
  #         context: "buildkite/elastic-agent-extended-testing - Serverless integration test"

  # - label: "Extended runtime leak tests"
  #   key: "extended-integration-tests"
  #   concurrency_group: elastic-agent-extended-testing/leak-tests
  #   concurrency: 8
  #   env:
  #     TEST_INTEG_AUTH_GCP_DATACENTER: "us-central1-b"
  #   command: ".buildkite/scripts/steps/integration_tests.sh stateful integration:TestForResourceLeaks"
  #   artifact_paths:
  #     - "build/TEST-**"
  #     - "build/diagnostics/*"
  #   agents:
  #     provider: "gcp"
  #     machineType: "n1-standard-8"
  #   notify:
  #     - github_commit_status:
  #         context: "buildkite/elastic-agent-extended-testing - Extended runtime leak tests"

  # - label: "Integration tests"
  #   key: "integration-tests"
  #   concurrency_group: elastic-agent-extended-testing/integration
  #   concurrency: 8
  #   env:
  #     TEST_INTEG_AUTH_GCP_DATACENTER: "us-central1-f"
  #   command: ".buildkite/scripts/steps/integration_tests.sh stateful"
  #   artifact_paths:
  #     - "build/TEST-**"
  #     - "build/diagnostics/*"
  #   agents:
  #     provider: "gcp"
  #     machineType: "n1-standard-8"
  #   notify:
  #     - github_commit_status:
  #         context: "buildkite/elastic-agent-extended-testing - Integration tests"

  # - label: "Serverless Beats Tests"
  #   key: "serverless-beats-integration-tests"
  #   concurrency_group: elastic-agent-extended-testing/beats-integration
  #   concurrency: 8
  #   env:
  #     TEST_INTEG_AUTH_GCP_DATACENTER: "us-central1-a"
  #   command: ".buildkite/scripts/steps/beats_tests.sh"
  #   # if: "build.env('CRON') == 'yes'"
  #   agents:
  #     provider: "gcp"
  #     machineType: "n1-standard-8"
  #   retry:
  #     manual:
  #       allowed: true
  #   notify:
  #     - github_commit_status:
  #         context: "buildkite/elastic-agent-extended-testing - Serverless Beats Tests"
