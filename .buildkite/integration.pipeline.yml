# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json

env:
  DOCKER_REGISTRY: "docker.elastic.co"
  VAULT_PATH: "kv/ci-shared/observability-ingest/cloud/gcp"

# This section is used to define the plugins that will be used in the pipeline.
# See https://buildkite.com/docs/pipelines/integrations/plugins/using#using-yaml-anchors-with-plugins
common:
  - google_oidc_plugin: &google_oidc_plugin
      # See https://github.com/elastic/oblt-infra/blob/main/conf/resources/repos/elastic-agent/01-gcp-oidc.tf
      # This plugin authenticates to Google Cloud using the OIDC token.
      elastic/oblt-google-auth#v1.3.0:
        lifetime: 10800 # seconds
        project-id: "elastic-observability-ci"
        project-number: "911195782929"
  - gcp_serverless_secrets_plugin: &gcp_serverless_secrets_plugin
      avaly/gcp-secret-manager#v1.2.0:
        env:
          # These secrets are created in .github/workflows/serverless-project.yml
          ELASTICSEARCH_HOST: ea-serverless-it-elasticsearch-hostname
          ELASTICSEARCH_PASSWORD: ea-serverless-it-elasticsearch-password
          ELASTICSEARCH_USERNAME: ea-serverless-it-elasticsearch-username
          KIBANA_HOST: ea-serverless-kibana-hostname
          KIBANA_USERNAME: ea-serverless-kibana-username
          KIBANA_PASSWORD: ea-serverless-kibana-password

steps:
  - group: "Integration tests: packaging"
    key: "int-packaging"
    steps:
      # Build matrix is not used for packaging in favor to unique step keys
      # Packaging linux/amd64
      - label: "Packaging: linux/amd64 rpm"
        key: packaging-ubuntu-x86-64
        env:
          PLATFORMS: "linux/amd64"
          PACKAGES: "tar.gz,rpm,deb"
        command: ".buildkite/scripts/steps/integration-package.sh"
        artifact_paths:
          - build/distributions/**
        retry:
          automatic:
            limit: 1
        agents:
          provider: "gcp"
          machineType: "n2-standard-8"

      - label: "Packaging: Ubuntu x86_64 FIPS"
        key: "packaging-ubuntu-x86-64-fips"
        env:
          PACKAGES: "tar.gz"
          PLATFORMS: "linux/amd64"
          FIPS: "true"
        command: ".buildkite/scripts/steps/integration-package.sh"
        artifact_paths:
          - build/distributions/**
        retry:
          automatic:
            limit: 1
        agents:
          provider: "gcp"
          machineType: "n2-standard-4"

      # Packaging linux/arm64
      - label: "Packaging: linux/arm64 tar.gz"
        key: packaging-ubuntu-arm64
        env:
          PLATFORMS: "linux/arm64"
          PACKAGES: "tar.gz"
        command: ".buildkite/scripts/steps/integration-package.sh"
        artifact_paths:
          - build/distributions/**
        retry:
          automatic:
            limit: 1
        agents:
          provider: "aws"
          instanceType: "c6g.4xlarge"
          imagePrefix: "core-ubuntu-2204-aarch64"

      - label: "Packaging: Ubuntu arm64 FIPS"
        key: "packaging-ubuntu-arm64-fips"
        env:
          PACKAGES: "tar.gz"
          PLATFORMS: "linux/arm64"
          FIPS: "true"
        command: ".buildkite/scripts/steps/integration-package.sh"
        artifact_paths:
          - build/distributions/**
        retry:
          automatic:
            limit: 1
        agents:
          provider: "aws"
          instanceType: "c6g.4xlarge"
          imagePrefix: "core-ubuntu-2204-aarch64"

      - label: "Packaging: windows/amd64 zip"
        key: packaging-windows
        env:
          PACKAGES: "zip"
          PLATFORMS: "windows/amd64"
        command: ".buildkite/scripts/steps/integration-package.sh"
        artifact_paths:
          - build/distributions/**
        retry:
          automatic:
            limit: 1
        agents:
          provider: "gcp"
          machineType: "n2-standard-8"

      - label: "Packaging: Containers linux/amd64"
        key: packaging-containers-x86-64
        env:
          PACKAGES: "docker"
          PLATFORMS: "linux/amd64"
        command: ".buildkite/scripts/steps/integration-package.sh"
        artifact_paths:
          - build/distributions/**
        agents:
          provider: "gcp"
          machineType: "n2-standard-8"
          diskSizeGb: 200

      - label: "Packaging: Containers linux/arm64"
        key: packaging-containers-arm64
        env:
          PACKAGES: "docker"
          PLATFORMS: "linux/arm64"
        command: |
          .buildkite/scripts/steps/integration-package.sh
        artifact_paths:
          - build/distributions/**
        agents:
          provider: "aws"
          instanceType: "c6g.4xlarge"
          imagePrefix: "core-ubuntu-2204-aarch64"
          diskSizeGb: 200

      - label: "Packaging: Containers linux/amd64 FIPS"
        key: packaging-containers-x86-64-fips
        env:
          PACKAGES: "docker"
          PLATFORMS: "linux/amd64"
          FIPS: "true"
        command: ".buildkite/scripts/steps/integration-package.sh"
        artifact_paths:
          - build/distributions/**
        agents:
          provider: "gcp"
          machineType: "n2-standard-8"
          diskSizeGb: 200

      - label: "Packaging: Containers linux/arm64 FIPS"
        key: packaging-containers-arm64-fips
        env:
          PACKAGES: "docker"
          PLATFORMS: "linux/arm64"
          FIPS: "true"
        command: |
          .buildkite/scripts/steps/integration-package.sh
        artifact_paths:
          - build/distributions/**
        agents:
          provider: "aws"
          instanceType: "c6g.4xlarge"
          imagePrefix: "core-ubuntu-2204-aarch64"
          diskSizeGb: 200

  - label: "Serverless integration test"
    key: "serverless-integration-tests"
    depends_on:
      - int-packaging
    concurrency_group: elastic-agent-extended-testing/serverless-integration
    concurrency: 8
    env:
      # we run each step in a different data center to spread the load
      TEST_INTEG_AUTH_GCP_DATACENTER: "us-central1-a"
    command: |
      buildkite-agent artifact download "build/distributions/**" . $BUILDKITE_BUILD_ID
      .buildkite/scripts/steps/integration_tests.sh serverless integration:single TestLogIngestionFleetManaged #right now, run a single test in serverless mode as a sort of smoke test, instead of re-running the entire suite
    artifact_paths:
      - "build/TEST-**"
      - "build/diagnostics/*"
    agents:
      provider: "gcp"
      machineType: "n2-standard-8"
    retry:
      automatic:
        limit: 1
    notify:
      - github_commit_status:
          context: "buildkite/elastic-agent-extended-testing - Serverless integration test"

  - label: "Serverless integration test (oblt-cli)"
    depends_on:
      - int-packaging
    command: .buildkite/scripts/steps/serverless-integration-tests.sh
    agents:
      provider: "gcp"
      machineType: "n2-standard-8"
    plugins:
      - *google_oidc_plugin
      - *gcp_serverless_secrets_plugin
    retry:
      automatic:
        limit: 1
    notify:
      - github_commit_status:
          context: "buildkite/elastic-agent-extended-testing - Serverless integration test (oblt-cli)"

  - label: "Extended runtime leak tests"
    key: "extended-integration-tests"
    depends_on:
      - int-packaging
    concurrency_group: elastic-agent-extended-testing/leak-tests
    concurrency: 8
    env:
      TEST_INTEG_AUTH_GCP_DATACENTER: "us-central1-b"
    command: |
      buildkite-agent artifact download "build/distributions/**" . $BUILDKITE_BUILD_ID
      .buildkite/scripts/steps/integration_tests.sh stateful integration:TestForResourceLeaks
    artifact_paths:
      - "build/TEST-**"
      - "build/diagnostics/*"
    agents:
      provider: "gcp"
      machineType: "n2-standard-8"
    retry:
      automatic:
        limit: 1
    notify:
      - github_commit_status:
          context: "buildkite/elastic-agent-extended-testing - Extended runtime leak tests"

  - label: "Triggering Integration tests"
    depends_on:
      - int-packaging
    command: "buildkite-agent pipeline upload .buildkite/bk.integration.pipeline.yml"
