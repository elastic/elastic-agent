# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json

env:
  VAULT_PATH: "kv/ci-shared/observability-ingest/cloud/gcp"
  DOCKER_REGISTRY: "docker.elastic.co"
steps:
  # - label: "Unit tests - Ubuntu 22.04"
  #   key: "unit-tests-2204"
  #   command: ".buildkite/scripts/steps/unit-tests.sh"
  #   artifact_paths:
  #     - "build/TEST-**"
  #     - "build/diagnostics/*"
  #   agents:
  #     provider: "gcp"
  #     image: "family/core-ubuntu-2204"
  #   retry:
  #     manual:
  #       allowed: true

  # - label: "Unit tests - Ubuntu 22.04 ARM64"
  #   key: "unit-tests-2204-arm64"
  #   command: ".buildkite/scripts/steps/unit-tests.sh"
  #   artifact_paths:
  #     - "build/TEST-**"
  #     - "build/diagnostics/*"
  #   agents:
  #     provider: "aws"
  #     imagePrefix: "core-ubuntu-2204-aarch64"
  #     diskSizeGb: 200
  #     instanceType: "m6g.4xlarge"
  #   retry:
  #     manual:
  #       allowed: true

  - label: "Unit tests - Windows 2022"
    key: "unit-tests-win2022"
    command: ".buildkite/scripts/steps/unit-tests.ps1"
    artifact_paths:
      - "build/TEST-**"
      - "build/diagnostics/*"
    agents:
      provider: "gcp"
      image: "family/core-windows-2022"
      machine_type: "n2-standard-8"
      disk_size: 200
      disk_type: "pd-ssd"
    retry:
      manual:
        allowed: true

  # - label: ":sonarqube: Continuous Code Inspection"
  #   env:
  #     VAULT_SONAR_TOKEN_PATH: "kv/ci-shared/platform-ingest/elastic/elastic-agent/sonar-analyze-token"
  #   agents:
  #     image: "docker.elastic.co/cloud-ci/sonarqube/buildkite-scanner:latest"
  #   command:
  #     - "buildkite-agent artifact download build/TEST-go-unit.cov ."
  #     - "buildkite-agent artifact download build/TEST-go-unit.out.json ."
  #     - "/scan-source-code.sh"
  #   depends_on:
  #     - "unit-tests"
  #   retry:
  #     manual:
  #       allowed: true

  # - label: "Integration tests"
  #   key: "integration-tests"
  #   command: ".buildkite/scripts/steps/integration_tests.sh"
  #   artifact_paths:
  #     - "build/TEST-**"
  #     - "build/diagnostics/*"
  #   agents:
  #     provider: "gcp"
  #     machineType: "n1-standard-8"

  # - wait: ~
  #   continue_on_failure: true
  # - label: "Processing test results"
  #   agents:
  #     provider: "gcp"
  #   plugins:
  #     - junit-annotate#v2.4.1:
  #         artifacts: build/TEST-go-*.xml
