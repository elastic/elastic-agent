---
name: serverless-project

on:
  workflow_dispatch:
  push:
    branches:
      - "test/serverless-its-oblt-cli"
  schedule:
    # To run more often if needed, for now weekly on sunday at 4:00 UTC
    - cron: "0 4 * * 0"

permissions:
  contents: read

jobs:
  create-serverless:
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    env:
      PREFIX: "ea-serverless-it"
    steps:
      ####################################
      # 1. Create the serverless project
      ####################################
      - name: Get token
        id: get_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{ secrets.OBS_AUTOMATION_APP_ID }}
          private_key: ${{ secrets.OBS_AUTOMATION_APP_PEM }}
          permissions: >-
            {
              "checks": "read",
              "contents": "write",
              "pull_requests": "write"
            }
          repositories: >-
            ["observability-test-environments"]

      ####################################
      # 2. Copy the serverless secrets
      ####################################
      # Authenticate to the elastic-observability-ci to rotate the cluster credentials
      - uses: elastic/oblt-actions/google/auth@v1
        with:
          project-number: "911195782929"
          project-id: "elastic-observability-ci"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@77e7a554d41e2ee56fc945c52dfd3f33d12def9a

      # NOTE:
      #   * While runnning this workflow, it might cause some hiccups if a PR runs when rotating the secrets
      #   * Secrets need to be created firstly gcloud secrets create otherwise gcloud secrets versions add will fail.
      - name: Rotate GCSM secrets
        env:
          GCP_PROJECT: "elastic-observability-ci"
        run: |
          echo -n "a${ELASTICSEARCH_HOST}" | gcloud secrets versions add "${PREFIX}-elasticsearch-hostname" --data-file=- --quiet --project "${GCP_PROJECT}"
          echo -n "b${ELASTICSEARCH_PASSWORD}" | gcloud secrets versions add "${PREFIX}-it-elasticsearch-password" --data-file=- --quiet --project "${GCP_PROJECT}"
          echo -n "c${ELASTICSEARCH_USERNAME}" | gcloud secrets versions add "${PREFIX}-it-elasticsearch-username" --data-file=- --quiet --project "${GCP_PROJECT}"
          echo -n "d${KIBANA_HOST}" | gcloud secrets versions add "${PREFIX}-kibana-hostname" --data-file=- --quiet --project "${GCP_PROJECT}"
          echo -n "e${KIBANA_USERNAME}" | gcloud secrets versions add "${PREFIX}-kibana-password" --data-file=- --quiet --project "${GCP_PROJECT}"
          echo -n "f${KIBANA_PASSWORD}" | gcloud secrets versions add "${PREFIX}-kibana-username" --data-file=- --quiet --project "${GCP_PROJECT}"

      # TODO: if rotation fails then rollback to the previous cluster.
      - if: ${{ failure()  }}
        uses: elastic/oblt-actions/slack/send@v1
        env:
          JOB_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        with:
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          # TODO: change to the correct channel
          #channel-id: "#ingest-notifications"
          channel-id: "#on-week-oblt-productivity"
          message: ":traffic_cone: serverless project creation failed for `${{ github.repository }}@${{ github.ref_name }}`, `@robots-ci` please look what's going on <${{ env.JOB_URL }}|here>"
