name: macos

on:
  push:
    branches:
      - main
      - 8.*
  pull_request:
    branches:
      - main
      - 8.*

jobs:
  golangci:
    runs-on: macos-latest
    name: lint
    steps:
     - uses: actions/checkout@v2
     - name: Fetch Go version from .go-version
       run: echo "GO_VERSION=$(cat .go-version)" >> $GITHUB_ENV
     - uses: actions/setup-go@v2
       with:
         go-version: ${{ env.GO_VERSION }}
     - name: golangci-lint
       env:
         CGO_ENABLED: 1
       uses: golangci/golangci-lint-action@v2
       with:
         # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
         version: v1.44.2

         # Give the job more time to execute.
         # Regarding `--whole-files`, the linter is supposed to support linting of changed a patch only but,
         # for some reason, it's very unreliable this way - sometimes it does not report any or some
         # issues without linting the whole files, so we have to use `--whole-files`
         # which can lead to some frustration from developers who would like to
         # fix a single line in an existing codebase and the linter would force them
         # into fixing all linting issues in the whole file instead.
         args: --timeout=30m --whole-files

         # Optional: if set to true then the action will use pre-installed Go.
         skip-go-installation: true

         # Optional: show only new issues if it's a pull request. The default value is `false`.
         only-new-issues: true
  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Fetch Go version from .go-version
      run: echo "GO_VERSION=$(cat .go-version)" >> $GITHUB_ENV
    - uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: Install dependencies
      run:  go get -u github.com/magefile/mage
    - name: Run build
      run: mage build
    - name: Run test
      run: mage unitTest
