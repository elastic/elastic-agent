version: 2
inputs:
  - name: aws-cloudwatch
    description: "AWS Cloudwatch"
    platforms: &platforms
      - linux/amd64
      - linux/arm64
      - darwin/amd64
      - darwin/arm64
      - windows/amd64
      - container/amd64
      - container/arm64
    outputs: &outputs
      - elasticsearch
      - kafka
      - logstash
      - redis
    command:
      args: &args
        - "-E"
        - "setup.ilm.enabled=false"
        - "-E"
        - "setup.template.enabled=false"
        - "-E"
        - "management.enabled=true"
        - "-E"
        - "logging.level=debug"
        - "-E"
        - "gc_percent=${FILEBEAT_GOGC:100}"
        - "-E"
        - "filebeat.config.modules.enabled=false"
  - name: aws-s3
    description: "AWS S3"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args
  - name: azure-eventhub
    description: "Azure Eventhub"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args
  - name: cloudfoundry
    description: "PCF Cloudfoundry"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args
  - name: container
    description: "Container logs"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args
  - name: docker
    aliases:
      - log/docker
    description: "Docker logs"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args
  - name: gcp-pubsub
    description: "GCP Pub-Sub"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args
  - name: http_endpoint
    description: "HTTP Endpoint"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args
  - name: httpjson
    description: "HTTP JSON Endpoint"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args
  - name: journald
    description: "Journald"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args
  - name: kafka
    description: "Kafka"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args
  - name: log
    aliases:
      - logfile
      - event/file
    description: "Logfile"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args
  - name: mqtt
    description: "MQTT"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args
  - name: netflow
    description: "Netflow"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args
  - name: o365audit
    description: "Office 365 Audit"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args
  - name: redis
    aliases:
      - log/redis_slowlog
    description: "Redis"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args
  - name: syslog
    aliases:
      - log/syslog
    description: "Syslog"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args
  - name: tcp
    aliases:
      - event/tcp
    description: "TCP"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args
  - name: udp
    aliases:
      - event/udp
    description: "UDP"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args
  - name: unix
    description: "Unix Socket"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args
  - name: winlog
    description: "Winlog"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args
  - name: filestream
    description: "Filestream"
    platforms: *platforms
    outputs: *outputs
    command:
      args: *args

# backward compatibility, remove with new inputs
restart_on_output_change: true
rules:
- fix_stream: {}
- inject_index:
    type: logs

- inject_stream_processor:
    on_conflict: insert_after
    type: logs

- map:
    path: inputs
    rules:
    - copy_all_to_list:
        to: streams
        on_conflict: noop
        except: ["streams", "enabled", "processors"]
    - copy_to_list:
        item: processors
        to: streams
        on_conflict: insert_before

- rename:
    from: inputs
    to: inputsstreams

- extract_list_items:
    path: inputsstreams
    item: streams
    to: inputs

- map:
    path: inputs
    rules:
    - translate:
        path: type
        mapper:
          logfile: log
          event/file: log
          event/stdin: stdin
          event/tcp: tcp
          event/udp: udp
          log/docker: docker
          log/redis_slowlog: redis
          log/syslog: syslog
    - remove_key:
        key: use_output
    - remove_key:
        key: data_stream
    - remove_key:
        key: data_stream.namespace
    - remove_key:
        key: data_stream.dataset

- filter_values:
    selector: inputs
    key: type
    values:
    - aws-cloudwatch
    - aws-s3
    - azure-eventhub
    - cloudfoundry
    - container
    - docker
    - gcp-pubsub
    - http_endpoint
    - httpjson
    - journald
    - kafka
    - log
    - mqtt
    - netflow
    - o365audit
    - redis
    - stdin
    - syslog
    - tcp
    - udp
    - unix
    - winlog
    - filestream

- filter_values:
    selector: inputs
    key: enabled
    values:
    - true

- inject_agent_info: {}

- copy:
    from: inputs
    to: filebeat

- filter:
    selectors:
    - filebeat
    - output
    - keystore

- inject_headers: {}

when: length(${filebeat.inputs}) > 0 and hasKey(${output}, 'elasticsearch', 'redis',
  'kafka', 'logstash')
