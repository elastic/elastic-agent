---
# Source: elastic-agent/charts/kube-state-metrics/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-5.28.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: "2.14.0"
  name: kube-state-metrics
  namespace: default
---
# Source: elastic-agent/templates/agent/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agent-clusterwide-example
  namespace: "default"
  labels:
    helm.sh/chart: elastic-agent-9.1.0-beta
    app.kubernetes.io/name: elastic-agent
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: 9.1.0
---
# Source: elastic-agent/templates/agent/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agent-pernode-example
  namespace: "default"
  labels:
    helm.sh/chart: elastic-agent-9.1.0-beta
    app.kubernetes.io/name: elastic-agent
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: 9.1.0
---
# Source: elastic-agent/templates/agent/k8s/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: agent-clusterwide-example
  namespace: "default"
  labels:
    helm.sh/chart: elastic-agent-9.1.0-beta
    app.kubernetes.io/name: elastic-agent
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: 9.1.0
stringData:

  agent.yml: |-
    id: agent-clusterwide-example
    outputs:
      default:
        hosts:
        - http://elasticsearch:9200
        password: changeme
        type: elasticsearch
        username: elastic
    secret_references: []
    agent:
      monitoring:
        enabled: true
        logs: true
        metrics: true
        namespace: default
        use_output: default
    inputs:
      - data_stream:
          namespace: default
        id: kubernetes/metrics-kubernetes.apiserver
        streams:
        - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          data_stream:
            dataset: kubernetes.apiserver
            type: metrics
          hosts:
          - https://${env.KUBERNETES_SERVICE_HOST}:${env.KUBERNETES_SERVICE_PORT}
          id: kubernetes/metrics-kubernetes.apiserver
          metricsets:
          - apiserver
          period: 30s
          ssl.certificate_authorities:
          - /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        type: kubernetes/metrics
        use_output: default
      - data_stream:
          namespace: default
        id: kube-state-metrics-kubernetes/metrics
        streams:
        - add_metadata: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          condition: ${kubernetes_leaderelection.leader} == true
          data_stream:
            dataset: kubernetes.state_container
            type: metrics
          hosts:
          - kube-state-metrics:8080
          id: kubernetes/metrics-kubernetes.state_container
          metricsets:
          - state_container
          period: 10s
        - add_metadata: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          condition: ${kubernetes_leaderelection.leader} == true
          data_stream:
            dataset: kubernetes.state_cronjob
            type: metrics
          hosts:
          - kube-state-metrics:8080
          id: kubernetes/metrics-kubernetes.state_cronjob
          metricsets:
          - state_cronjob
          period: 10s
        - add_metadata: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          condition: ${kubernetes_leaderelection.leader} == true
          data_stream:
            dataset: kubernetes.state_daemonset
            type: metrics
          hosts:
          - kube-state-metrics:8080
          id: kubernetes/metrics-kubernetes.state_daemonset
          metricsets:
          - state_daemonset
          period: 10s
        - add_metadata: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          condition: ${kubernetes_leaderelection.leader} == true
          data_stream:
            dataset: kubernetes.state_deployment
            type: metrics
          hosts:
          - kube-state-metrics:8080
          id: kubernetes/metrics-kubernetes.state_deployment
          metricsets:
          - state_deployment
          period: 10s
        - add_metadata: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          condition: ${kubernetes_leaderelection.leader} == true
          data_stream:
            dataset: kubernetes.state_job
            type: metrics
          hosts:
          - kube-state-metrics:8080
          id: kubernetes/metrics-kubernetes.state_job
          metricsets:
          - state_job
          period: 10s
        - add_metadata: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          condition: ${kubernetes_leaderelection.leader} == true
          data_stream:
            dataset: kubernetes.state_namespace
            type: metrics
          hosts:
          - kube-state-metrics:8080
          id: kubernetes/metrics-kubernetes.state_namespace
          metricsets:
          - state_namespace
          period: 10s
        - add_metadata: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          condition: ${kubernetes_leaderelection.leader} == true
          data_stream:
            dataset: kubernetes.state_node
            type: metrics
          hosts:
          - kube-state-metrics:8080
          id: kubernetes/metrics-kubernetes.state_node
          metricsets:
          - state_node
          period: 10s
        - add_metadata: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          condition: ${kubernetes_leaderelection.leader} == true
          data_stream:
            dataset: kubernetes.state_persistentvolumeclaim
            type: metrics
          hosts:
          - kube-state-metrics:8080
          id: kubernetes/metrics-kubernetes.state_persistentvolumeclaim
          metricsets:
          - state_persistentvolumeclaim
          period: 10s
        - add_metadata: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          condition: ${kubernetes_leaderelection.leader} == true
          data_stream:
            dataset: kubernetes.state_persistentvolume
            type: metrics
          hosts:
          - kube-state-metrics:8080
          id: kubernetes/metrics-kubernetes.state_persistentvolume
          metricsets:
          - state_persistentvolume
          period: 10s
        - add_metadata: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          condition: ${kubernetes_leaderelection.leader} == true
          data_stream:
            dataset: kubernetes.state_pod
            type: metrics
          hosts:
          - kube-state-metrics:8080
          id: kubernetes/metrics-kubernetes.state_pod
          metricsets:
          - state_pod
          period: 10s
        - add_metadata: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          condition: ${kubernetes_leaderelection.leader} == true
          data_stream:
            dataset: kubernetes.state_replicaset
            type: metrics
          hosts:
          - kube-state-metrics:8080
          id: kubernetes/metrics-kubernetes.state_replicaset
          metricsets:
          - state_replicaset
          period: 10s
        - add_metadata: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          condition: ${kubernetes_leaderelection.leader} == true
          data_stream:
            dataset: kubernetes.state_resourcequota
            type: metrics
          hosts:
          - kube-state-metrics:8080
          id: kubernetes/metrics-kubernetes.state_resourcequota
          metricsets:
          - state_resourcequota
          period: 10s
        - add_metadata: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          condition: ${kubernetes_leaderelection.leader} == true
          data_stream:
            dataset: kubernetes.state_service
            type: metrics
          hosts:
          - kube-state-metrics:8080
          id: kubernetes/metrics-kubernetes.state_service
          metricsets:
          - state_service
          period: 10s
        - add_metadata: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          condition: ${kubernetes_leaderelection.leader} == true
          data_stream:
            dataset: kubernetes.state_statefulset
            type: metrics
          hosts:
          - kube-state-metrics:8080
          id: kubernetes/metrics-kubernetes.state_statefulset
          metricsets:
          - state_statefulset
          period: 10s
        - add_metadata: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          condition: ${kubernetes_leaderelection.leader} == true
          data_stream:
            dataset: kubernetes.state_storageclass
            type: metrics
          hosts:
          - kube-state-metrics:8080
          id: kubernetes/metrics-kubernetes.state_storageclass
          metricsets:
          - state_storageclass
          period: 10s
        type: kubernetes/metrics
        use_output: default
      - data_stream:
          namespace: default
        id: nginx/metrics-nginx-69240207-6fcc-4d19-aee3-dbf716e3bb0f
        meta:
          package:
            name: nginx
            version: 1.19.1
        name: nginx-1
        package_policy_id: 69240207-6fcc-4d19-aee3-dbf716e3bb0f
        preset: clusterWide
        revision: 1
        streams:
        - data_stream:
            dataset: nginx.stubstatus
            type: metrics
          hosts:
          - http://nginx.default.svc.cluster.local:80
          id: nginx/metrics-nginx.stubstatus-69240207-6fcc-4d19-aee3-dbf716e3bb0f
          metricsets:
          - stubstatus
          period: 10s
          server_status_path: /nginx_status
          tags:
          - nginx-stubstatus
        type: nginx/metrics
        use_output: default
    providers:
      kubernetes:
        node: ${NODE_NAME}
        scope: cluster
      kubernetes_leaderelection:
        enabled: true
        leader_lease: example-clusterwide
---
# Source: elastic-agent/templates/agent/k8s/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: agent-pernode-example
  namespace: "default"
  labels:
    helm.sh/chart: elastic-agent-9.1.0-beta
    app.kubernetes.io/name: elastic-agent
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: 9.1.0
stringData:

  agent.yml: |-
    id: agent-pernode-example
    outputs:
      default:
        hosts:
        - http://elasticsearch:9200
        password: changeme
        type: elasticsearch
        username: elastic
    secret_references: []
    agent:
      monitoring:
        enabled: true
        logs: true
        metrics: true
        namespace: default
        use_output: default
    inputs:
      - data_stream:
          namespace: default
        id: filestream-container-logs
        streams:
        - data_stream:
            dataset: kubernetes.container_logs
            type: logs
          id: kubernetes-container-logs-${kubernetes.pod.name}-${kubernetes.container.id}
          parsers:
          - container:
              format: auto
              stream: all
          paths:
          - /var/log/containers/*${kubernetes.container.id}.log
          processors:
          - add_fields:
              fields:
                annotations.elastic_co/dataset: ${kubernetes.annotations.elastic.co/dataset|""}
                annotations.elastic_co/namespace: ${kubernetes.annotations.elastic.co/namespace|""}
                annotations.elastic_co/preserve_original_event: ${kubernetes.annotations.elastic.co/preserve_original_event|""}
              target: kubernetes
          - drop_fields:
              fields:
              - kubernetes.annotations.elastic_co/dataset
              ignore_missing: true
              when:
                equals:
                  kubernetes.annotations.elastic_co/dataset: ""
          - drop_fields:
              fields:
              - kubernetes.annotations.elastic_co/namespace
              ignore_missing: true
              when:
                equals:
                  kubernetes.annotations.elastic_co/namespace: ""
          - drop_fields:
              fields:
              - kubernetes.annotations.elastic_co/preserve_original_event
              ignore_missing: true
              when:
                equals:
                  kubernetes.annotations.elastic_co/preserve_original_event: ""
          - add_tags:
              tags:
              - preserve_original_event
              when:
                and:
                - has_fields:
                  - kubernetes.annotations.elastic_co/preserve_original_event
                - regexp:
                    kubernetes.annotations.elastic_co/preserve_original_event: ^(?i)true$
          prospector.scanner.symlinks: true
        type: filestream
        use_output: default
      - data_stream:
          namespace: default
        id: kubernetes/metrics-kubernetes.container
        streams:
        - add_metadata: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          data_stream:
            dataset: kubernetes.container
            type: metrics
          hosts:
          - https://${env.NODE_NAME}:10250
          id: kubernetes/metrics-kubernetes.container
          metricsets:
          - container
          period: 10s
          ssl.verification_mode: none
        type: kubernetes/metrics
        use_output: default
      - data_stream:
          namespace: default
        id: kubernetes/metrics-kubernetes.node
        streams:
        - add_metadata: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          data_stream:
            dataset: kubernetes.node
            type: metrics
          hosts:
          - https://${env.NODE_NAME}:10250
          id: kubernetes/metrics-kubernetes.node
          metricsets:
          - node
          period: 10s
          ssl.verification_mode: none
        type: kubernetes/metrics
        use_output: default
      - data_stream:
          namespace: default
        id: kubernetes/metrics-kubernetes.pod
        streams:
        - add_metadata: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          data_stream:
            dataset: kubernetes.pod
            type: metrics
          hosts:
          - https://${env.NODE_NAME}:10250
          id: kubernetes/metrics-kubernetes.pod
          metricsets:
          - pod
          period: 10s
          ssl.verification_mode: none
        type: kubernetes/metrics
        use_output: default
      - data_stream:
          namespace: default
        id: kubernetes/metrics-kubernetes.system
        streams:
        - add_metadata: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          data_stream:
            dataset: kubernetes.system
            type: metrics
          hosts:
          - https://${env.NODE_NAME}:10250
          id: kubernetes/metrics-kubernetes.system
          metricsets:
          - system
          period: 10s
          ssl.verification_mode: none
        type: kubernetes/metrics
        use_output: default
      - data_stream:
          namespace: default
        id: kubernetes/metrics-kubernetes.volume
        streams:
        - add_metadata: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          data_stream:
            dataset: kubernetes.volume
            type: metrics
          hosts:
          - https://${env.NODE_NAME}:10250
          id: kubernetes/metrics-kubernetes.volume
          metricsets:
          - volume
          period: 10s
          ssl.verification_mode: none
        type: kubernetes/metrics
        use_output: default
    providers:
      kubernetes:
        hints:
          default_container_logs: false
          enabled: true
        node: ${NODE_NAME}
        scope: node
      kubernetes_leaderelection:
        enabled: false
        leader_lease: example-pernode
---
# Source: elastic-agent/charts/kube-state-metrics/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-5.28.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: "2.14.0"
  name: kube-state-metrics
rules:

- apiGroups: ["certificates.k8s.io"]
  resources:
  - certificatesigningrequests
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["list", "watch"]

- apiGroups: ["batch"]
  resources:
  - cronjobs
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - daemonsets
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - deployments
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - endpoints
  verbs: ["list", "watch"]

- apiGroups: ["autoscaling"]
  resources:
  - horizontalpodautoscalers
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "networking.k8s.io"]
  resources:
  - ingresses
  verbs: ["list", "watch"]

- apiGroups: ["batch"]
  resources:
  - jobs
  verbs: ["list", "watch"]

- apiGroups: ["coordination.k8s.io"]
  resources:
  - leases
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - limitranges
  verbs: ["list", "watch"]

- apiGroups: ["admissionregistration.k8s.io"]
  resources:
    - mutatingwebhookconfigurations
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - namespaces
  verbs: ["list", "watch"]

- apiGroups: ["networking.k8s.io"]
  resources:
  - networkpolicies
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - nodes
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - persistentvolumeclaims
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - persistentvolumes
  verbs: ["list", "watch"]

- apiGroups: ["policy"]
  resources:
    - poddisruptionbudgets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - pods
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - replicasets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - replicationcontrollers
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - resourcequotas
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - secrets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - services
  verbs: ["list", "watch"]

- apiGroups: ["apps"]
  resources:
  - statefulsets
  verbs: ["list", "watch"]

- apiGroups: ["storage.k8s.io"]
  resources:
    - storageclasses
  verbs: ["list", "watch"]

- apiGroups: ["admissionregistration.k8s.io"]
  resources:
    - validatingwebhookconfigurations
  verbs: ["list", "watch"]

- apiGroups: ["storage.k8s.io"]
  resources:
    - volumeattachments
  verbs: ["list", "watch"]
---
# Source: elastic-agent/templates/agent/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: agent-clusterWide-example-default
  labels:
    helm.sh/chart: elastic-agent-9.1.0-beta
    app.kubernetes.io/name: elastic-agent
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: 9.1.0
rules:
  - apiGroups: [ "" ] # "" indicates the core API group
    resources:
      - nodes
      - namespaces
      - events
      - pods
      - services
      - configmaps
      - persistentvolumes
      - persistentvolumeclaims
      - persistentvolumeclaims/status
      - nodes/metrics
      - nodes/proxy
      - nodes/stats
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - watch
      - list
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
      - watch
      - list
  - apiGroups: [ "coordination.k8s.io" ]
    resources:
      - leases
    verbs:
      - get
      - create
      - update
  - nonResourceURLs:
      - /healthz
      - /healthz/*
      - /livez
      - /livez/*
      - /metrics
      - /metrics/slis
      - /readyz
      - /readyz/*
    verbs:
      - get
  - apiGroups: [ "apps" ]
    resources:
      - replicasets
      - deployments
      - daemonsets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups: [ "batch" ]
    resources:
      - jobs
      - cronjobs
    verbs:
      - get
      - list
      - watch
---
# Source: elastic-agent/templates/agent/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: agent-perNode-example-default
  labels:
    helm.sh/chart: elastic-agent-9.1.0-beta
    app.kubernetes.io/name: elastic-agent
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: 9.1.0
rules:
  - apiGroups: [ "" ] # "" indicates the core API group
    resources:
      - nodes
      - namespaces
      - events
      - pods
      - services
      - configmaps
      - persistentvolumes
      - persistentvolumeclaims
      - persistentvolumeclaims/status
      - nodes/metrics
      - nodes/proxy
      - nodes/stats
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - watch
      - list
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
      - watch
      - list
  - apiGroups: [ "coordination.k8s.io" ]
    resources:
      - leases
    verbs:
      - get
      - create
      - update
  - nonResourceURLs:
      - /healthz
      - /healthz/*
      - /livez
      - /livez/*
      - /metrics
      - /metrics/slis
      - /readyz
      - /readyz/*
    verbs:
      - get
  - apiGroups: [ "apps" ]
    resources:
      - replicasets
      - deployments
      - daemonsets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups: [ "batch" ]
    resources:
      - jobs
      - cronjobs
    verbs:
      - get
      - list
      - watch
---
# Source: elastic-agent/charts/kube-state-metrics/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-5.28.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: "2.14.0"
  name: kube-state-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-state-metrics
subjects:
- kind: ServiceAccount
  name: kube-state-metrics
  namespace: default
---
# Source: elastic-agent/templates/agent/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: agent-clusterWide-example-default
  labels:
    helm.sh/chart: elastic-agent-9.1.0-beta
    app.kubernetes.io/name: elastic-agent
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: 9.1.0
subjects:
  - kind: ServiceAccount
    name: agent-clusterwide-example
    namespace: "default"
roleRef:
  kind: ClusterRole
  name: agent-clusterWide-example-default
  apiGroup: rbac.authorization.k8s.io
---
# Source: elastic-agent/templates/agent/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: agent-perNode-example-default
  labels:
    helm.sh/chart: elastic-agent-9.1.0-beta
    app.kubernetes.io/name: elastic-agent
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: 9.1.0
subjects:
  - kind: ServiceAccount
    name: agent-pernode-example
    namespace: "default"
roleRef:
  kind: ClusterRole
  name: agent-perNode-example-default
  apiGroup: rbac.authorization.k8s.io
---
# Source: elastic-agent/charts/kube-state-metrics/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kube-state-metrics
  namespace: default
  labels:    
    helm.sh/chart: kube-state-metrics-5.28.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: "2.14.0"
  annotations:
    prometheus.io/scrape: 'true'
spec:
  type: "ClusterIP"
  ports:
  - name: "http"
    protocol: TCP
    port: 8080
    targetPort: 8080
  
  selector:    
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: example
---
# Source: elastic-agent/templates/agent/k8s/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: agent-pernode-example
  namespace: "default"
  labels:
    helm.sh/chart: elastic-agent-9.1.0-beta
    app.kubernetes.io/name: elastic-agent
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: 9.1.0
spec:
  selector:
    matchLabels:
      name: agent-pernode-example
  template:
    metadata:
      labels:
        name: agent-pernode-example
      annotations:
        checksum/config: daca0d998edb3afa587d96e69b0833f6919ca6ba72f58f3a1f83b22d7e5ffaf6
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - -c
        - /etc/elastic-agent/agent.yml
        - -e
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: STATE_PATH
          value: /usr/share/elastic-agent/state
        - name: ELASTIC_NETINFO
          value: "false"
        image: docker.elastic.co/beats/elastic-agent:9.1.0-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: agent
        resources:
          limits:
            memory: 1000Mi
          requests:
            cpu: 100m
            memory: 400Mi
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - mountPath: /var/log
          name: varlog
          readOnly: true
        - mountPath: /usr/share/elastic-agent/state
          name: agent-data
        - mountPath: /etc/elastic-agent/agent.yml
          name: config
          readOnly: true
          subPath: agent.yml
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: agent-pernode-example
      volumes:
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /etc/elastic-agent/default/agent-pernode-example/state
          type: DirectoryOrCreate
        name: agent-data
      - name: config
        secret:
          defaultMode: 292
          secretName: agent-pernode-example
---
# Source: elastic-agent/charts/kube-state-metrics/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-state-metrics
  namespace: default
  labels:    
    helm.sh/chart: kube-state-metrics-5.28.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: "2.14.0"
spec:
  selector:
    matchLabels:      
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/instance: example
  replicas: 1
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:        
        helm.sh/chart: kube-state-metrics-5.28.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: metrics
        app.kubernetes.io/part-of: kube-state-metrics
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/instance: example
        app.kubernetes.io/version: "2.14.0"
    spec:
      automountServiceAccountToken: true
      hostNetwork: false
      serviceAccountName: kube-state-metrics
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: kube-state-metrics
        args:
        - --port=8080
        - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
        imagePullPolicy: IfNotPresent
        image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.14.0
        ports:
        - containerPort: 8080
          name: "http"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            path: /livez
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            path: /readyz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
---
# Source: elastic-agent/templates/agent/k8s/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-clusterwide-example
  namespace: "default"
  labels:
    helm.sh/chart: elastic-agent-9.1.0-beta
    app.kubernetes.io/name: elastic-agent
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: 9.1.0
spec:
  selector:
    matchLabels:
      name: agent-clusterwide-example
  template:
    metadata:
      labels:
        name: agent-clusterwide-example
      annotations:
        checksum/config: b27b8c59cca12784fcd6fba96f6ea4923afffa2c6ec373b6e02d763e0f342091
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - -c
        - /etc/elastic-agent/agent.yml
        - -e
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: STATE_PATH
          value: /usr/share/elastic-agent/state
        - name: ELASTIC_NETINFO
          value: "false"
        image: docker.elastic.co/beats/elastic-agent:9.1.0-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: agent
        resources:
          limits:
            memory: 800Mi
          requests:
            cpu: 100m
            memory: 400Mi
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /usr/share/elastic-agent/state
          name: agent-data
        - mountPath: /etc/elastic-agent/agent.yml
          name: config
          readOnly: true
          subPath: agent.yml
      dnsPolicy: ClusterFirstWithHostNet
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: agent-clusterwide-example
      volumes:
      - emptyDir: {}
        name: agent-data
      - name: config
        secret:
          defaultMode: 292
          secretName: agent-clusterwide-example
