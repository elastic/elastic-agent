---
# Source: elastic-agent/templates/agent/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agent-nginx-example
  namespace: "default"
  labels:
    helm.sh/chart: elastic-agent-0.0.1
    app.kubernetes.io/name: elastic-agent
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: 9.0.0
---
# Source: elastic-agent/templates/agent/k8s/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: agent-nginx-example
  namespace: "default"
  labels:
    helm.sh/chart: elastic-agent-0.0.1
    app.kubernetes.io/name: elastic-agent
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: 9.0.0
stringData:

  agent.yml: |-
    fleet:
      enabled: true
    providers:
      kubernetes_leaderelection:
        enabled: false
        leader_lease: example-nginx
---
# Source: elastic-agent/templates/agent/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: agent-nginx-example-default
  labels:
    helm.sh/chart: elastic-agent-0.0.1
    app.kubernetes.io/name: elastic-agent
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: 9.0.0
rules:
  - apiGroups: [ "" ] # "" indicates the core API group
    resources:
      - nodes
      - namespaces
      - events
      - pods
      - services
      - configmaps
      - persistentvolumes
      - persistentvolumeclaims
      - persistentvolumeclaims/status
      - nodes/metrics
      - nodes/proxy
      - nodes/stats
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - watch
      - list
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
      - watch
      - list
  - apiGroups: [ "coordination.k8s.io" ]
    resources:
      - leases
    verbs:
      - get
      - create
      - update
  - nonResourceURLs:
      - /healthz
      - /healthz/*
      - /livez
      - /livez/*
      - /metrics
      - /metrics/slis
      - /readyz
      - /readyz/*
    verbs:
      - get
  - apiGroups: [ "apps" ]
    resources:
      - replicasets
      - deployments
      - daemonsets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups: [ "batch" ]
    resources:
      - jobs
      - cronjobs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    - namespaces
    - pods
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - apps
    resources:
    - replicasets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - get
    - list
    - watch
---
# Source: elastic-agent/templates/agent/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: agent-nginx-example-default
  labels:
    helm.sh/chart: elastic-agent-0.0.1
    app.kubernetes.io/name: elastic-agent
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: 9.0.0
subjects:
  - kind: ServiceAccount
    name: agent-nginx-example
    namespace: "default"
roleRef:
  kind: ClusterRole
  name: agent-nginx-example-default
  apiGroup: rbac.authorization.k8s.io
---
# Source: elastic-agent/templates/agent/k8s/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-nginx-example
  namespace: "default"
  labels:
    helm.sh/chart: elastic-agent-0.0.1
    app.kubernetes.io/name: elastic-agent
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: 9.0.0
spec:
  selector:
    matchLabels:
      name: agent-nginx-example
  template:
    metadata:
      labels:
        name: agent-nginx-example
      annotations:
        checksum/config: 975ed05540e0d099fe1b28b15d6403aacee676d0776a69fb75eb8624e19ad2de
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - -c
        - /etc/elastic-agent/agent.yml
        - -e
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: STATE_PATH
          value: /usr/share/elastic-agent/state
        - name: FLEET_URL
          value: http://localhost:8220
        - name: FLEET_ENROLLMENT_TOKEN
          value: fleetToken
        - name: FLEET_INSECURE
          value: "false"
        - name: FLEET_ENROLL
          value: "1"
        image: docker.elastic.co/beats/elastic-agent:9.0.0-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: agent
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /usr/share/elastic-agent/state
          name: agent-data
        - mountPath: /etc/elastic-agent/agent.yml
          name: config
          readOnly: true
          subPath: agent.yml
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: agent-nginx-example
      volumes:
      - hostPath:
          path: /etc/elastic-agent/default/agent-nginx-example-managed/state
          type: DirectoryOrCreate
        name: agent-data
      - name: config
        secret:
          defaultMode: 292
          secretName: agent-nginx-example
