---
# Source: elastic-agent/templates/agent/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agent-pernode-example
  namespace: "default"
  labels:
    helm.sh/chart: elastic-agent-9.1.0-beta
    app.kubernetes.io/name: elastic-agent
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: 9.1.0
---
# Source: elastic-agent/templates/agent/k8s/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: agent-pernode-example
  namespace: "default"
  labels:
    helm.sh/chart: elastic-agent-9.1.0-beta
    app.kubernetes.io/name: elastic-agent
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: 9.1.0
stringData:

  agent.yml: |-
    id: agent-pernode-example
    outputs:
      default:
        hosts:
        - http://elasticsearch:9200
        password: changeme
        type: elasticsearch
        username: elastic
    secret_references: []
    agent:
      monitoring:
        enabled: true
        logs: true
        metrics: true
        namespace: default
        use_output: default
    inputs:
      - data_stream:
          namespace: default
        id: filestream-container-logs
        streams:
        - data_stream:
            dataset: kubernetes.container_logs
            type: logs
          id: kubernetes-container-logs-${kubernetes.pod.name}-${kubernetes.container.id}
          parsers:
          - container:
              format: auto
              stream: all
          paths:
          - /var/log/containers/*${kubernetes.container.id}.log
          processors:
          - add_fields:
              fields:
                annotations.elastic_co/dataset: ${kubernetes.annotations.elastic.co/dataset|""}
                annotations.elastic_co/namespace: ${kubernetes.annotations.elastic.co/namespace|""}
                annotations.elastic_co/preserve_original_event: ${kubernetes.annotations.elastic.co/preserve_original_event|""}
              target: kubernetes
          - drop_fields:
              fields:
              - kubernetes.annotations.elastic_co/dataset
              ignore_missing: true
              when:
                equals:
                  kubernetes.annotations.elastic_co/dataset: ""
          - drop_fields:
              fields:
              - kubernetes.annotations.elastic_co/namespace
              ignore_missing: true
              when:
                equals:
                  kubernetes.annotations.elastic_co/namespace: ""
          - drop_fields:
              fields:
              - kubernetes.annotations.elastic_co/preserve_original_event
              ignore_missing: true
              when:
                equals:
                  kubernetes.annotations.elastic_co/preserve_original_event: ""
          - add_tags:
              tags:
              - preserve_original_event
              when:
                and:
                - has_fields:
                  - kubernetes.annotations.elastic_co/preserve_original_event
                - regexp:
                    kubernetes.annotations.elastic_co/preserve_original_event: ^(?i)true$
          prospector.scanner.symlinks: true
        type: filestream
        use_output: default
    providers:
      kubernetes:
        node: ${NODE_NAME}
        scope: node
      kubernetes_leaderelection:
        enabled: false
        leader_lease: example-pernode
---
# Source: elastic-agent/templates/agent/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: agent-perNode-example-default
  labels:
    helm.sh/chart: elastic-agent-9.1.0-beta
    app.kubernetes.io/name: elastic-agent
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: 9.1.0
rules:
  - apiGroups: [ "" ] # "" indicates the core API group
    resources:
      - nodes
      - namespaces
      - events
      - pods
      - services
      - configmaps
      - persistentvolumes
      - persistentvolumeclaims
      - persistentvolumeclaims/status
      - nodes/metrics
      - nodes/proxy
      - nodes/stats
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - watch
      - list
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
      - watch
      - list
  - apiGroups: [ "coordination.k8s.io" ]
    resources:
      - leases
    verbs:
      - get
      - create
      - update
  - nonResourceURLs:
      - /healthz
      - /healthz/*
      - /livez
      - /livez/*
      - /metrics
      - /metrics/slis
      - /readyz
      - /readyz/*
    verbs:
      - get
  - apiGroups: [ "apps" ]
    resources:
      - replicasets
      - deployments
      - daemonsets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups: [ "batch" ]
    resources:
      - jobs
      - cronjobs
    verbs:
      - get
      - list
      - watch
---
# Source: elastic-agent/templates/agent/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: agent-perNode-example-default
  labels:
    helm.sh/chart: elastic-agent-9.1.0-beta
    app.kubernetes.io/name: elastic-agent
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: 9.1.0
subjects:
  - kind: ServiceAccount
    name: agent-pernode-example
    namespace: "default"
roleRef:
  kind: ClusterRole
  name: agent-perNode-example-default
  apiGroup: rbac.authorization.k8s.io
---
# Source: elastic-agent/templates/agent/k8s/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: agent-pernode-example
  namespace: "default"
  labels:
    helm.sh/chart: elastic-agent-9.1.0-beta
    app.kubernetes.io/name: elastic-agent
    app.kubernetes.io/instance: example
    app.kubernetes.io/version: 9.1.0
spec:
  selector:
    matchLabels:
      name: agent-pernode-example
  template:
    metadata:
      labels:
        name: agent-pernode-example
      annotations:
        checksum/config: 0840dcdf026f64cefb7aa69f420bc923d7e2d7d6e9a239e107fd2684e309d8ae
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - -c
        - /etc/elastic-agent/agent.yml
        - -e
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: STATE_PATH
          value: /usr/share/elastic-agent/state
        - name: ELASTIC_NETINFO
          value: "false"
        image: docker.elastic.co/beats/elastic-agent:9.1.0-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: agent
        resources:
          limits:
            memory: 1000Mi
          requests:
            cpu: 100m
            memory: 400Mi
        securityContext:
          capabilities:
            add:
            - DAC_READ_SEARCH
            - CHOWN
            - SETPCAP
            - SYS_PTRACE
            drop:
            - ALL
          privileged: false
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - mountPath: /var/log
          name: varlog
          readOnly: true
        - mountPath: /usr/share/elastic-agent/state
          name: agent-data
        - mountPath: /etc/elastic-agent/agent.yml
          name: config
          readOnly: true
          subPath: agent.yml
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: agent-pernode-example
      volumes:
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /etc/elastic-agent/default/agent-pernode-example/state
          type: DirectoryOrCreate
        name: agent-data
      - name: config
        secret:
          defaultMode: 292
          secretName: agent-pernode-example
