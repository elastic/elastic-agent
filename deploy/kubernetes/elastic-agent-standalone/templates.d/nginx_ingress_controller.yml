inputs:
    - name: filestream-nginx_ingress_controller
      id: filestream-nginx_ingress_controller-${kubernetes.hints.container_id}
      type: filestream
      use_output: default
      streams:
        - condition: ${kubernetes.hints.nginx_ingress_controller.access.enabled} == true or ${kubernetes.hints.nginx_ingress_controller.enabled} == true
          data_stream:
            dataset: nginx_ingress_controller.access
            type: logs
          exclude_files:
            - .gz$
          parsers:
            - container:
                format: auto
                stream: stdout
          paths:
            - /var/log/containers/*${kubernetes.hints.container_id}.log
          processors:
            - add_locale: null
          prospector.scanner.symlinks: true
          tags:
            - nginx-ingress-controller-access
        - condition: ${kubernetes.hints.nginx_ingress_controller.error.enabled} == true or ${kubernetes.hints.nginx_ingress_controller.enabled} == true
          data_stream:
            dataset: nginx_ingress_controller.error
            type: logs
          exclude_files:
            - .gz$
          multiline:
            match: after
            negate: true
            pattern: '^[A-Z]{1}[0-9]{4} '
          parsers:
            - container:
                format: auto
                stream: stderr
          paths:
            - /var/log/containers/*${kubernetes.hints.container_id}.log
          processors:
            - drop_event:
                when:
                    not:
                        regexp:
                            message: '^[A-Z]{1}[0-9]{4} '
            - add_locale: null
          prospector.scanner.symlinks: true
          tags:
            - nginx-ingress-controller-error
      data_stream.namespace: default
