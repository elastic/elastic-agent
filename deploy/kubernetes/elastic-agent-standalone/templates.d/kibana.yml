inputs:
    - name: filestream-kibana
      id: filestream-kibana-${kubernetes.hints.container_id}
      type: filestream
      use_output: default
      streams:
        - condition: ${kubernetes.hints.kibana.audit.enabled} == true or ${kubernetes.hints.kibana.enabled} == true
          data_stream:
            dataset: kibana.audit
            type: logs
          exclude_files:
            - .gz$
          parsers:
            - container:
                format: auto
                stream: ${kubernetes.hints.kibana.audit.stream|'all'}
          paths:
            - /var/log/containers/*${kubernetes.hints.container_id}.log
          prospector:
            scanner:
                symlinks: true
        - condition: ${kubernetes.hints.kibana.log.enabled} == true or ${kubernetes.hints.kibana.enabled} == true
          data_stream:
            dataset: kibana.log
            type: logs
          exclude_files:
            - .gz$
          parsers:
            - container:
                format: auto
                stream: ${kubernetes.hints.kibana.log.stream|'all'}
          paths:
            - /var/log/containers/*${kubernetes.hints.container_id}.log
          prospector:
            scanner:
                symlinks: true
      data_stream.namespace: default
    - name: http/metrics-kibana
      id: http/metrics-kibana-${kubernetes.hints.container_id}
      type: http/metrics
      use_output: default
      streams:
        - condition: ${kubernetes.hints.kibana.background_task_utilization.enabled} == true or ${kubernetes.hints.kibana.enabled} == true
          data_stream:
            dataset: kibana.background_task_utilization
            type: metrics
          hosts:
            - ${kubernetes.hints.kibana.background_task_utilization.host|kubernetes.hints.kibana.host|'http://localhost:5601'}
          method: GET
          metricsets:
            - json
          namespace: background_task_utilization
          password: ${kubernetes.hints.kibana.background_task_utilization.password|kubernetes.hints.kibana.password|''}
          path: /api/task_manager/_background_task_utilization
          period: ${kubernetes.hints.kibana.background_task_utilization.period|kubernetes.hints.kibana.period|'10s'}
          processors:
            - rename:
                fail_on_error: false
                fields:
                    - from: http.background_task_utilization
                      to: kibana.background_task_utilization
                ignore_missing: true
          username: ${kubernetes.hints.kibana.background_task_utilization.username|kubernetes.hints.kibana.username|''}
      data_stream.namespace: default
    - name: kibana/metrics-kibana
      id: kibana/metrics-kibana-${kubernetes.hints.container_id}
      type: kibana/metrics
      use_output: default
      streams:
        - condition: ${kubernetes.hints.kibana.cluster_actions.enabled} == true or ${kubernetes.hints.kibana.enabled} == true
          data_stream:
            dataset: kibana.stack_monitoring.cluster_actions
            type: metrics
          hosts:
            - ${kubernetes.hints.kibana.cluster_actions.host|kubernetes.hints.kibana.host|'http://localhost:5601'}
          metricsets:
            - cluster_actions
          password: ${kubernetes.hints.kibana.cluster_actions.password|kubernetes.hints.kibana.password|''}
          period: ${kubernetes.hints.kibana.cluster_actions.period|kubernetes.hints.kibana.period|'10s'}
          username: ${kubernetes.hints.kibana.cluster_actions.username|kubernetes.hints.kibana.username|''}
        - condition: ${kubernetes.hints.kibana.cluster_rules.enabled} == true or ${kubernetes.hints.kibana.enabled} == true
          data_stream:
            dataset: kibana.stack_monitoring.cluster_rules
            type: metrics
          hosts:
            - ${kubernetes.hints.kibana.cluster_rules.host|kubernetes.hints.kibana.host|'http://localhost:5601'}
          metricsets:
            - cluster_rules
          password: ${kubernetes.hints.kibana.cluster_rules.password|kubernetes.hints.kibana.password|''}
          period: ${kubernetes.hints.kibana.cluster_rules.period|kubernetes.hints.kibana.period|'10s'}
          username: ${kubernetes.hints.kibana.cluster_rules.username|kubernetes.hints.kibana.username|''}
        - condition: ${kubernetes.hints.kibana.node_actions.enabled} == true or ${kubernetes.hints.kibana.enabled} == true
          data_stream:
            dataset: kibana.stack_monitoring.node_actions
            type: metrics
          hosts:
            - ${kubernetes.hints.kibana.node_actions.host|kubernetes.hints.kibana.host|'http://localhost:5601'}
          metricsets:
            - node_actions
          password: ${kubernetes.hints.kibana.node_actions.password|kubernetes.hints.kibana.password|''}
          period: ${kubernetes.hints.kibana.node_actions.period|kubernetes.hints.kibana.period|'10s'}
          username: ${kubernetes.hints.kibana.node_actions.username|kubernetes.hints.kibana.username|''}
        - condition: ${kubernetes.hints.kibana.node_rules.enabled} == true or ${kubernetes.hints.kibana.enabled} == true
          data_stream:
            dataset: kibana.stack_monitoring.node_rules
            type: metrics
          hosts:
            - ${kubernetes.hints.kibana.node_rules.host|kubernetes.hints.kibana.host|'http://localhost:5601'}
          metricsets:
            - node_rules
          password: ${kubernetes.hints.kibana.node_rules.password|kubernetes.hints.kibana.password|''}
          period: ${kubernetes.hints.kibana.node_rules.period|kubernetes.hints.kibana.period|'10s'}
          username: ${kubernetes.hints.kibana.node_rules.username|kubernetes.hints.kibana.username|''}
        - condition: ${kubernetes.hints.kibana.stats.enabled} == true or ${kubernetes.hints.kibana.enabled} == true
          data_stream:
            dataset: kibana.stack_monitoring.stats
            type: metrics
          hosts:
            - ${kubernetes.hints.kibana.stats.host|kubernetes.hints.kibana.host|'http://localhost:5601'}
          metricsets:
            - stats
          password: ${kubernetes.hints.kibana.stats.password|kubernetes.hints.kibana.password|''}
          period: ${kubernetes.hints.kibana.stats.period|kubernetes.hints.kibana.period|'10s'}
          username: ${kubernetes.hints.kibana.stats.username|kubernetes.hints.kibana.username|''}
        - condition: ${kubernetes.hints.kibana.status.enabled} == true or ${kubernetes.hints.kibana.enabled} == true
          data_stream:
            dataset: kibana.stack_monitoring.status
            type: metrics
          hosts:
            - ${kubernetes.hints.kibana.status.host|kubernetes.hints.kibana.host|'http://localhost:5601'}
          metricsets:
            - status
          password: ${kubernetes.hints.kibana.status.password|kubernetes.hints.kibana.password|''}
          period: ${kubernetes.hints.kibana.status.period|kubernetes.hints.kibana.period|'10s'}
          username: ${kubernetes.hints.kibana.status.username|kubernetes.hints.kibana.username|''}
      data_stream.namespace: default
