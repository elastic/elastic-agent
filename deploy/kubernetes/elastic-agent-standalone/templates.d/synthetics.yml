inputs:
    - name: synthetics/tcp-synthetics
      id: synthetics/tcp-synthetics-${kubernetes.hints.container_id}
      type: synthetics/tcp
      use_output: default
      streams:
        - __ui: null
          condition: ${kubernetes.hints.synthetics.tcp.enabled} == true and ${kubernetes.hints.synthetics.enabled} == true
          data_stream:
            dataset: tcp
            type: synthetics
          enabled: true
          hosts: ${kubernetes.hints.synthetics.tcp.host|kubernetes.hints.synthetics.host|''}
          ipv4: true
          ipv6: true
          name: null
          processors:
            - add_fields:
                fields:
                    monitor.fleet_managed: true
                target: ""
          proxy_use_local_resolver: false
          run_from.geo.name: Fleet managed
          run_from.id: fleet_managed
          schedule: '@every 3m'
          timeout: ${kubernetes.hints.synthetics.tcp.timeout|kubernetes.hints.synthetics.timeout|''}
          type: tcp
      data_stream.namespace: default
    - name: synthetics/icmp-synthetics
      id: synthetics/icmp-synthetics-${kubernetes.hints.container_id}
      type: synthetics/icmp
      use_output: default
      streams:
        - __ui: null
          condition: ${kubernetes.hints.synthetics.icmp.enabled} == true and ${kubernetes.hints.synthetics.enabled} == true
          data_stream:
            dataset: icmp
            type: synthetics
          enabled: true
          hosts: ${kubernetes.hints.synthetics.icmp.host|kubernetes.hints.synthetics.host|''}
          ipv4: true
          ipv6: true
          name: null
          processors:
            - add_fields:
                fields:
                    monitor.fleet_managed: true
                target: ""
          run_from.geo.name: Fleet managed
          run_from.id: fleet_managed
          schedule: '@every 3m'
          timeout: ${kubernetes.hints.synthetics.icmp.timeout|kubernetes.hints.synthetics.timeout|''}
          type: icmp
          wait: 1s
      data_stream.namespace: default
    - name: synthetics/browser-synthetics
      id: synthetics/browser-synthetics-${kubernetes.hints.container_id}
      type: synthetics/browser
      use_output: default
      streams:
        - __ui: null
          condition: ${kubernetes.hints.synthetics.browser.enabled} == true or ${kubernetes.hints.synthetics.enabled} == true
          data_stream:
            dataset: browser
            type: synthetics
          enabled: true
          name: null
          processors:
            - add_fields:
                fields:
                    monitor.fleet_managed: true
                target: ""
          run_from.geo.name: Fleet managed
          run_from.id: fleet_managed
          schedule: '@every 3m'
          throttling: null
          timeout: ${kubernetes.hints.synthetics.browser.timeout|kubernetes.hints.synthetics.timeout|''}
          type: browser
        - condition: ${kubernetes.hints.synthetics.browser_network.enabled} == true or ${kubernetes.hints.synthetics.enabled} == true
          data_stream:
            dataset: browser.network
            type: synthetics
          processors:
            - add_fields:
                fields:
                    monitor.fleet_managed: true
                target: ""
        - condition: ${kubernetes.hints.synthetics.browser_screenshot.enabled} == true or ${kubernetes.hints.synthetics.enabled} == true
          data_stream:
            dataset: browser.screenshot
            type: synthetics
          processors:
            - add_fields:
                fields:
                    monitor.fleet_managed: true
                target: ""
      data_stream.namespace: default
    - name: filestream-synthetics
      id: filestream-synthetics-${kubernetes.hints.container_id}
      type: filestream
      use_output: default
      streams:
        - condition: ${kubernetes.hints.synthetics.container_logs.enabled} == true
          data_stream:
            dataset: synthetics.container_logs
            type: logs
          exclude_files: []
          exclude_lines: []
          parsers:
            - container:
                format: auto
                stream: all
          paths:
            - /var/log/containers/*${kubernetes.hints.container_id}.log
          prospector:
            scanner:
                symlinks: true
          tags: []
      data_stream.namespace: default
    - name: synthetics/http-synthetics
      id: synthetics/http-synthetics-${kubernetes.hints.container_id}
      type: synthetics/http
      use_output: default
      streams:
        - __ui: null
          check.request.method: null
          condition: ${kubernetes.hints.synthetics.http.enabled} == true and ${kubernetes.hints.synthetics.enabled} == true
          data_stream:
            dataset: http
            type: synthetics
          enabled: true
          ipv4: true
          ipv6: true
          max_redirects: null
          name: null
          password: ${kubernetes.hints.synthetics.http.password|kubernetes.hints.synthetics.password|''}
          processors:
            - add_fields:
                fields:
                    monitor.fleet_managed: true
                target: ""
          response.include_body: null
          response.include_headers: null
          run_from.geo.name: Fleet managed
          run_from.id: fleet_managed
          schedule: '@every 3m'
          timeout: ${kubernetes.hints.synthetics.http.timeout|kubernetes.hints.synthetics.timeout|''}
          type: http
          urls: null
          username: ${kubernetes.hints.synthetics.http.username|kubernetes.hints.synthetics.username|''}
      data_stream.namespace: default
