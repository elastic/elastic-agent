inputs:
    - name: filestream-apache
      id: filestream-apache-${kubernetes.hints.container_id}
      type: filestream
      use_output: default
      streams:
        - condition: ${kubernetes.hints.apache.access.enabled} == true or ${kubernetes.hints.apache.enabled} == true
          data_stream:
            dataset: apache.access
            type: logs
          exclude_files:
            - .gz$
          parsers:
            - container:
                format: auto
                stream: ${kubernetes.hints.apache.access.stream|'all'}
          paths:
            - /var/log/containers/*${kubernetes.hints.container_id}.log
          prospector:
            scanner:
                symlinks: true
          tags:
            - apache-access
        - condition: ${kubernetes.hints.apache.error.enabled} == true or ${kubernetes.hints.apache.enabled} == true
          data_stream:
            dataset: apache.error
            type: logs
          exclude_files:
            - .gz$
          parsers:
            - container:
                format: auto
                stream: ${kubernetes.hints.apache.error.stream|'all'}
          paths:
            - /var/log/containers/*${kubernetes.hints.container_id}.log
          processors:
            - add_locale: null
          prospector:
            scanner:
                symlinks: true
          tags:
            - apache-error
      data_stream.namespace: default
    - name: httpjson-apache
      id: httpjson-apache-${kubernetes.hints.container_id}
      type: httpjson
      use_output: default
      streams:
        - auth.basic.password: ${kubernetes.hints.apache.access.password|kubernetes.hints.apache.password|''}
          auth.basic.user: ${kubernetes.hints.apache.access.username|kubernetes.hints.apache.username|''}
          condition: ${kubernetes.hints.apache.access.enabled} == true and ${kubernetes.hints.apache.enabled} == true
          config_version: "2"
          cursor:
            index_earliest:
                value: '[[.last_event.result.max_indextime]]'
          data_stream:
            dataset: apache.access
            type: logs
          interval: 10s
          request.method: POST
          request.transforms:
            - set:
                target: url.params.search
                value: search sourcetype="access*" | streamstats max(_indextime) AS max_indextime
            - set:
                target: url.params.output_mode
                value: json
            - set:
                default: '[[(now (parseDuration "-10s")).Unix]]'
                target: url.params.index_earliest
                value: '[[ .cursor.index_earliest ]]'
            - set:
                target: url.params.index_latest
                value: '[[(now).Unix]]'
            - set:
                target: header.Content-Type
                value: application/x-www-form-urlencoded
          request.url: https://server.example.com:8089/services/search/jobs/export
          response.decode_as: application/x-ndjson
          response.split:
            delimiter: |4+
            target: body.result._raw
            type: string
          tags:
            - forwarded
            - apache-access
        - auth.basic.password: ${kubernetes.hints.apache.error.password|kubernetes.hints.apache.password|''}
          auth.basic.user: ${kubernetes.hints.apache.error.username|kubernetes.hints.apache.username|''}
          condition: ${kubernetes.hints.apache.error.enabled} == true and ${kubernetes.hints.apache.enabled} == true
          config_version: 2
          cursor:
            index_earliest:
                value: '[[.last_event.result.max_indextime]]'
          data_stream:
            dataset: apache.error
            type: logs
          interval: 10s
          request.method: POST
          request.transforms:
            - set:
                target: url.params.search
                value: search sourcetype=apache:error OR sourcetype=apache_error | streamstats max(_indextime) AS max_indextime
            - set:
                target: url.params.output_mode
                value: json
            - set:
                default: '[[(now (parseDuration "-10s")).Unix]]'
                target: url.params.index_earliest
                value: '[[ .cursor.index_earliest ]]'
            - set:
                target: url.params.index_latest
                value: '[[(now).Unix]]'
            - set:
                target: header.Content-Type
                value: application/x-www-form-urlencoded
          request.url: https://server.example.com:8089/services/search/jobs/export
          response.decode_as: application/x-ndjson
          response.split:
            delimiter: |4+
            target: body.result._raw
            type: string
          tags:
            - forwarded
            - apache-error
      data_stream.namespace: default
    - name: apache/metrics-apache
      id: apache/metrics-apache-${kubernetes.hints.container_id}
      type: apache/metrics
      use_output: default
      streams:
        - condition: ${kubernetes.hints.apache.status.enabled} == true or ${kubernetes.hints.apache.enabled} == true
          data_stream:
            dataset: apache.status
            type: metrics
          hosts:
            - ${kubernetes.hints.apache.status.host|kubernetes.hints.apache.host|'http://127.0.0.1'}
          metricsets:
            - status
          period: ${kubernetes.hints.apache.status.period|kubernetes.hints.apache.period|'30s'}
          server_status_path: /server-status
      data_stream.namespace: default
