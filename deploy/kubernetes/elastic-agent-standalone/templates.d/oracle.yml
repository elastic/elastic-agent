inputs:
    - name: filestream-oracle
      type: filestream
      use_output: default
      streams:
        - condition: ${kubernetes.hints.oracle.database_audit.enabled} == true or ${kubernetes.hints.oracle.enabled} == true
          data_stream:
            dataset: oracle.database_audit
            type: logs
          exclude_files:
            - .gz$
          exclude_lines:
            - ^Audit file
          parsers:
            - multiline:
                match: after
                negate: true
                pattern: ^[A-Za-z]{3}\s+[A-Za-z]{3}\s+[0-9]{1,2}\s[0-9]{2}:[0-9]{2}:[0-9]{2}\s[0-9]{4}\s\S[0-9]{2}:[0-9]{2}
                timeout: 10
                type: pattern
          paths:
            - /var/log/containers/*${kubernetes.hints.container_id}.log
          processors:
            - add_locale: null
          tags:
            - oracle-database_audit
      data_stream.namespace: default
    - name: sql/metrics-oracle
      type: sql/metrics
      use_output: default
      streams:
        - condition: ${kubernetes.hints.oracle.performance.enabled} == true and ${kubernetes.hints.oracle.enabled} == true
          data_stream:
            dataset: oracle.performance
            type: metrics
          driver: oracle
          hosts:
            - ${kubernetes.hints.oracle.performance.host|'oracle://sys:Oradoc_db1@0.0.0.0:1521/ORCLCDB.localdomain?sysdba=1'}
          metricsets:
            - query
          period: ${kubernetes.hints.oracle.performance.period|'60s'}
          raw_data.enabled: true
          sql_queries:
            - query: SELECT name, physical_reads, db_block_gets, consistent_gets, 1 - (physical_reads / (db_block_gets + consistent_gets)) "Hit_Ratio" FROM V$BUFFER_POOL_STATISTICS
              response_format: table
            - query: SELECT sum(a.value) total_cur, avg(a.value) avg_cur, max(a.value) max_cur, S.username, s.machine FROM v$sesstat a, v$statname b, v$session s WHERE a.statistic# = b.statistic# AND s.sid = a.sid GROUP BY s.username, s.machine
              response_format: table
            - query: SELECT total_cursors, current_cursors, sess_cur_cache_hits, parse_count_total, sess_cur_cache_hits / total_cursors as cachehits_totalcursors_ratio , sess_cur_cache_hits - parse_count_total as real_parses FROM ( SELECT sum ( decode ( name, 'opened cursors cumulative', value, 0)) total_cursors, sum ( decode ( name, 'opened cursors current',value,0)) current_cursors, sum ( decode ( name, 'session cursor cache hits',value,0)) sess_cur_cache_hits, sum ( decode ( name, 'parse count (total)',value,0)) parse_count_total FROM v$sysstat WHERE name IN ( 'opened cursors cumulative','opened cursors current','session cursor cache hits', 'parse count (total)' ))
              response_format: table
            - query: SELECT 'lock_requests' "Ratio" , AVG(gethitratio) FROM V$LIBRARYCACHE UNION SELECT 'pin_requests' "Ratio", AVG(pinhitratio) FROM V$LIBRARYCACHE UNION SELECT 'io_reloads' "Ratio", (SUM(reloads) / SUM(pins)) FROM V$LIBRARYCACHE
              response_format: variables
        - condition: ${kubernetes.hints.oracle.sysmetric.enabled} == true and ${kubernetes.hints.oracle.enabled} == true
          data_stream:
            dataset: oracle.sysmetric
            type: metrics
          driver: oracle
          dynamic_metric_name_filter: '%'
          hosts:
            - ${kubernetes.hints.oracle.sysmetric.host|'oracle://sys:Oradoc_db1@0.0.0.0:1521/ORCLCDB.localdomain?sysdba=1'}
          metricsets:
            - query
          period: ${kubernetes.hints.oracle.sysmetric.period|'60s'}
          raw_data.enabled: true
          sql_queries:
            - query: SELECT METRIC_NAME, VALUE FROM V$SYSMETRIC WHERE GROUP_ID = 2 and METRIC_NAME LIKE '%'
              response_format: variables
        - condition: ${kubernetes.hints.oracle.tablespace.enabled} == true and ${kubernetes.hints.oracle.enabled} == true
          data_stream:
            dataset: oracle.tablespace
            type: metrics
          driver: oracle
          dynamic_metric_name_filter: ""
          hosts:
            - ${kubernetes.hints.oracle.tablespace.host|'oracle://sys:Oradoc_db1@0.0.0.0:1521/ORCLCDB.localdomain?sysdba=1'}
          metricsets:
            - query
          period: ${kubernetes.hints.oracle.tablespace.period|'60s'}
          raw_data.enabled: true
          sql_queries:
            - query: WITH data_files AS (SELECT file_name, file_id, tablespace_name, bytes, status, maxbytes, user_bytes, online_status FROM   sys.dba_data_files UNION SELECT file_name, file_id, tablespace_name, bytes, status, maxbytes, user_bytes, status AS ONLINE_STATUS FROM   sys.dba_temp_files), spaces AS (SELECT b.tablespace_name TB_NAME, tbs_size          TB_SIZE_USED, a.free_space      TB_SIZE_FREE FROM   (SELECT tablespace_name, SUM(bytes) AS free_space FROM   dba_free_space GROUP  BY tablespace_name) a, (SELECT tablespace_name, SUM(bytes) AS tbs_size FROM   dba_data_files GROUP  BY tablespace_name) b WHERE  a.tablespace_name(+) = b.tablespace_name AND a.tablespace_name != 'TEMP'), temp_spaces AS (SELECT tablespace_name, tablespace_size, allocated_space, free_space FROM   dba_temp_free_space WHERE  tablespace_name = 'TEMP'), details AS (SELECT df.file_name, df.file_id, df.tablespace_name, df.bytes, df.status, df.maxbytes, df.user_bytes, df.online_status, sp.tb_size_used, sp.tb_size_free FROM   data_files df, spaces sp WHERE  df.tablespace_name = sp.tb_name UNION SELECT df.file_name, df.file_id, df.tablespace_name, df.bytes, df.status, df.maxbytes, df.user_bytes, df.online_status, tsp.tablespace_size - tsp.free_space AS TB_SIZE_USED, tsp.free_space                       AS TB_SIZE_FREE FROM   data_files df, temp_spaces tsp WHERE  df.tablespace_name = tsp.tablespace_name) SELECT file_name, file_id, tablespace_name, bytes, status, maxbytes, user_bytes, online_status, tb_size_used, tb_size_free, SUM(bytes) over() AS TOTAL_BYTES FROM   details
              response_format: table
      data_stream.namespace: default
