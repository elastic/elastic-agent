inputs:
    - name: httpjson-panw_cortex_xdr
      id: httpjson-panw_cortex_xdr-${kubernetes.hints.container_id}
      type: httpjson
      use_output: default
      streams:
        - condition: ${kubernetes.hints.panw_cortex_xdr.alerts.enabled} == true or ${kubernetes.hints.panw_cortex_xdr.enabled} == true
          config_version: "2"
          cursor:
            next_ts:
                value: '[[.last_event.detection_timestamp]]'
          data_stream:
            dataset: panw_cortex_xdr.alerts
            type: logs
          interval: 5m
          request.method: POST
          request.rate_limit:
            limit: '[[.last_response.header.Get "X-Rate-Limit-Limit"]]'
            remaining: '[[.last_response.header.Get "X-Rate-Limit-Remaining"]]'
            reset: '[[(parseDate (.last_response.header.Get "X-Rate-Limit-Reset")).Unix]]'
          request.timeout: 30s
          request.transforms:
            - set:
                target: header.Authorization
                value: null
            - set:
                target: header.x-xdr-auth-id
                value: 1
            - set:
                target: body.request_data.sort.field
                value: creation_time
            - set:
                target: body.request_data.sort.keyword
                value: asc
            - append:
                default: |-
                    {
                      "field": "creation_time",
                      "operator": "gte",
                      "value": [[ mul (add (now (parseDuration "-24h")).Unix) 1000 ]]
                    }
                target: body.request_data.filters
                value: |-
                    {
                      "field": "creation_time",
                      "operator": "gte",
                      "value": [[ .cursor.next_ts ]]
                    }
                value_type: json
          request.url: https://test.xdr.eu.paloaltonetworks.com/public_api/v1/alerts/get_alerts_multi_events
          response.pagination:
            - set:
                fail_on_template_error: true
                target: body.request_data.search_from
                value: '[[if (ne (len .last_response.body.reply.alerts) 0)]][[mul .last_response.page 100]][[end]]'
                value_type: int
            - set:
                fail_on_template_error: true
                target: body.request_data.search_to
                value: '[[if (ne (len .last_response.body.reply.alerts) 0)]][[add (mul .last_response.page 100) 100]][[end]]'
                value_type: int
          response.split:
            split:
                keep_parent: true
                target: body.events
            target: body.reply.alerts
          tags:
            - forwarded
            - panw_cortex_xdr
      data_stream.namespace: default
    - name: filestream-panw_cortex_xdr
      id: filestream-panw_cortex_xdr-${kubernetes.hints.container_id}
      type: filestream
      use_output: default
      streams:
        - condition: ${kubernetes.hints.panw_cortex_xdr.container_logs.enabled} == true
          data_stream:
            dataset: panw_cortex_xdr.container_logs
            type: logs
          exclude_files: []
          exclude_lines: []
          parsers:
            - container:
                format: auto
                stream: all
          paths:
            - /var/log/containers/*${kubernetes.hints.container_id}.log
          prospector:
            scanner:
                symlinks: true
          tags: []
      data_stream.namespace: default
