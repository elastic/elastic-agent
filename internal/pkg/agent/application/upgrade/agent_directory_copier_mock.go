// Code generated by mockery v2.53.4. DO NOT EDIT.

package upgrade

import (
	logp "github.com/elastic/elastic-agent-libs/logp"
	mock "github.com/stretchr/testify/mock"
)

// mock_agentDirectoryCopier is an autogenerated mock type for the agentDirectoryCopier type
type mock_agentDirectoryCopier struct {
	mock.Mock
}

type mock_agentDirectoryCopier_Expecter struct {
	mock *mock.Mock
}

func (_m *mock_agentDirectoryCopier) EXPECT() *mock_agentDirectoryCopier_Expecter {
	return &mock_agentDirectoryCopier_Expecter{mock: &_m.Mock}
}

// copyActionStore provides a mock function with given fields: log, newHome
func (_m *mock_agentDirectoryCopier) copyActionStore(log *logp.Logger, newHome string) error {
	ret := _m.Called(log, newHome)

	if len(ret) == 0 {
		panic("no return value specified for copyActionStore")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*logp.Logger, string) error); ok {
		r0 = rf(log, newHome)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mock_agentDirectoryCopier_copyActionStore_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'copyActionStore'
type mock_agentDirectoryCopier_copyActionStore_Call struct {
	*mock.Call
}

// copyActionStore is a helper method to define mock.On call
//   - log *logp.Logger
//   - newHome string
func (_e *mock_agentDirectoryCopier_Expecter) copyActionStore(log interface{}, newHome interface{}) *mock_agentDirectoryCopier_copyActionStore_Call {
	return &mock_agentDirectoryCopier_copyActionStore_Call{Call: _e.mock.On("copyActionStore", log, newHome)}
}

func (_c *mock_agentDirectoryCopier_copyActionStore_Call) Run(run func(log *logp.Logger, newHome string)) *mock_agentDirectoryCopier_copyActionStore_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*logp.Logger), args[1].(string))
	})
	return _c
}

func (_c *mock_agentDirectoryCopier_copyActionStore_Call) Return(_a0 error) *mock_agentDirectoryCopier_copyActionStore_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mock_agentDirectoryCopier_copyActionStore_Call) RunAndReturn(run func(*logp.Logger, string) error) *mock_agentDirectoryCopier_copyActionStore_Call {
	_c.Call.Return(run)
	return _c
}

// copyRunDirectory provides a mock function with given fields: log, oldRunPath, newRunPath
func (_m *mock_agentDirectoryCopier) copyRunDirectory(log *logp.Logger, oldRunPath string, newRunPath string) error {
	ret := _m.Called(log, oldRunPath, newRunPath)

	if len(ret) == 0 {
		panic("no return value specified for copyRunDirectory")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*logp.Logger, string, string) error); ok {
		r0 = rf(log, oldRunPath, newRunPath)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mock_agentDirectoryCopier_copyRunDirectory_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'copyRunDirectory'
type mock_agentDirectoryCopier_copyRunDirectory_Call struct {
	*mock.Call
}

// copyRunDirectory is a helper method to define mock.On call
//   - log *logp.Logger
//   - oldRunPath string
//   - newRunPath string
func (_e *mock_agentDirectoryCopier_Expecter) copyRunDirectory(log interface{}, oldRunPath interface{}, newRunPath interface{}) *mock_agentDirectoryCopier_copyRunDirectory_Call {
	return &mock_agentDirectoryCopier_copyRunDirectory_Call{Call: _e.mock.On("copyRunDirectory", log, oldRunPath, newRunPath)}
}

func (_c *mock_agentDirectoryCopier_copyRunDirectory_Call) Run(run func(log *logp.Logger, oldRunPath string, newRunPath string)) *mock_agentDirectoryCopier_copyRunDirectory_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*logp.Logger), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *mock_agentDirectoryCopier_copyRunDirectory_Call) Return(_a0 error) *mock_agentDirectoryCopier_copyRunDirectory_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mock_agentDirectoryCopier_copyRunDirectory_Call) RunAndReturn(run func(*logp.Logger, string, string) error) *mock_agentDirectoryCopier_copyRunDirectory_Call {
	_c.Call.Return(run)
	return _c
}

// newMock_agentDirectoryCopier creates a new instance of mock_agentDirectoryCopier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMock_agentDirectoryCopier(t interface {
	mock.TestingT
	Cleanup(func())
}) *mock_agentDirectoryCopier {
	mock := &mock_agentDirectoryCopier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
