// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by elastic-agent/internals/dev-tools/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// internal/spec/apm-server.yml
	// internal/spec/auditbeat.yml
	// internal/spec/cloudbeat.yml
	// internal/spec/endpoint.yml
	// internal/spec/filebeat.yml
	// internal/spec/fleet-server.yml
	// internal/spec/heartbeat.yml
	// internal/spec/metricbeat.yml
	// internal/spec/osquerybeat.yml
	// internal/spec/packetbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f + ": " + err.Error())
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
