// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by elastic-agent/internals/dev-tools/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// internal/spec/apm-server.yml
	// internal/spec/auditbeat.yml
	// internal/spec/cloudbeat.yml
	// internal/spec/endpoint.yml
	// internal/spec/filebeat.yml
	// internal/spec/fleet-server.yml
	// internal/spec/heartbeat.yml
	// internal/spec/metricbeat.yml
	// internal/spec/osquerybeat.yml
	// internal/spec/packetbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f + ": " + err.Error())
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
