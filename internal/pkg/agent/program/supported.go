// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by elastic-agent/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// internal/spec/apm-server.yml
	// internal/spec/auditbeat.yml
	// internal/spec/cloudbeat.yml
	// internal/spec/endpoint.yml
	// internal/spec/filebeat.yml
	// internal/spec/fleet-server.yml
	// internal/spec/heartbeat.yml
	// internal/spec/metricbeat.yml
	// internal/spec/osquerybeat.yml
	// internal/spec/packetbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f + ": " + err.Error())
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
