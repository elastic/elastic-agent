// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by elastic-agent/internals/dev-tools/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// internal/spec/apm-server.yml
	// internal/spec/auditbeat.yml
	// internal/spec/cloudbeat.yml
	// internal/spec/endpoint.yml
	// internal/spec/filebeat.yml
	// internal/spec/fleet-server.yml
	// internal/spec/heartbeat.yml
	// internal/spec/metricbeat.yml
	// internal/spec/osquerybeat.yml
	// internal/spec/packetbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f + ": " + err.Error())
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
