// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by elastic-agent/internals/dev-tools/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// internal/spec/apm-server.yml
	// internal/spec/auditbeat.yml
	// internal/spec/cloudbeat.yml
	// internal/spec/endpoint.yml
	// internal/spec/filebeat.yml
	// internal/spec/fleet-server.yml
	// internal/spec/heartbeat.yml
	// internal/spec/metricbeat.yml
	// internal/spec/osquerybeat.yml
	// internal/spec/packetbeat.yml
<<<<<<< HEAD
	unpacked := packer.MustUnpack("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")
=======
	unpacked := packer.MustUnpack("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")
>>>>>>> 6c2d91aca (Osquerybeat: Fix osquerybeat is not running with logstash output (#674))
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f + ": " + err.Error())
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
