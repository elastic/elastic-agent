// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by elastic-agent/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// internal/spec/apm-server.yml
	// internal/spec/auditbeat.yml
	// internal/spec/cloudbeat.yml
	// internal/spec/endpoint.yml
	// internal/spec/filebeat.yml
	// internal/spec/fleet-server.yml
	// internal/spec/heartbeat.yml
	// internal/spec/metricbeat.yml
	// internal/spec/osquerybeat.yml
	// internal/spec/packetbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f + ": " + err.Error())
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
