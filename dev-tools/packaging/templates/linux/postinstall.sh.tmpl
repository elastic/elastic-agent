#!/usr/bin/env bash

set -e

symlink="/usr/share/elastic-agent/bin/elastic-agent"
old_agent_dir=""

# check if $symlink exists for the previous install
# and derive the old agent directory
if test -L "$symlink"; then
    resolved_symlink="$(readlink -f -- "$symlink")"
    # check if it is resolved to non empty string
    if ! [ -z "$resolved_symlink" ]; then
        old_agent_dir="$( dirname "$resolved_symlink" )"
    fi
fi

commit_hash="{{ commit_short }}"
version_dir="{{agent_package_version}}{{snapshot_suffix}}"

new_agent_dir="/var/lib/elastic-agent/data/elastic-agent-$version_dir-$commit_hash"

# copy the state files if there was a previous agent install
if ! [ -z "$old_agent_dir" ] && ! [ "$old_agent_dir" -ef "$new_agent_dir" ]; then
    yml_path="$old_agent_dir/state.yml"
    enc_path="$old_agent_dir/state.enc"
    echo "migrate state from $old_agent_dir to $new_agent_dir"

    if test -f "$yml_path"; then
        echo "found "$yml_path", copy to "$new_agent_dir"."
        cp "$yml_path" "$new_agent_dir"
    fi

    if test -f "$enc_path"; then
        echo "found "$enc_path", copy to "$new_agent_dir"."
        cp "$enc_path" "$new_agent_dir"
    fi
fi

# delete symlink if exists
if test -L "$symlink"; then
    echo "found symlink $symlink, unlink"
    unlink "$symlink"
fi

# create symlink to the new agent
echo "create symlink "$symlink" to "$new_agent_dir/elastic-agent""
ln -s "$new_agent_dir/elastic-agent" "$symlink"

systemctl daemon-reload 2> /dev/null
exit 0
