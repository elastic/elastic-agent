---

# This file contains the package specifications for both Community Beats and
# Official Beats. The shared section contains YAML anchors that are used to
# define common parts of the package in order to not repeat ourselves.

shared:
  - &common
    name: '{{.BeatName}}'
    service_name: '{{.BeatServiceName}}'
    os: '{{.GOOS}}'
    arch: '{{.PackageArch}}'
    vendor: '{{.BeatVendor}}'
    version: '{{ agent_package_version }}'
    license: '{{.BeatLicense}}'
    url: '{{.BeatURL}}'
    description: '{{.BeatDescription}}'

  # agent specific
  # Deb/RPM spec for community beats.
  - &deb_rpm_agent_spec
    <<: *common
    post_install_script: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/linux/postinstall.sh.tmpl'
    post_rm_script: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/linux/postrm.sh.tmpl'
    files:
      /usr/share/{{.BeatName}}/LICENSE.txt:
        source: '{{ repo.RootDir }}/LICENSE.txt'
        mode: 0644
      /usr/share/{{.BeatName}}/NOTICE.txt:
        source: '{{ repo.RootDir }}/NOTICE.txt'
        mode: 0644
      /usr/share/{{.BeatName}}/README.md:
        template: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/common/README.md.tmpl'
        mode: 0644
      /usr/share/{{.BeatName}}/.build_hash.txt:
        content: >
          {{ commit }}
        mode: 0644
      /etc/{{.BeatName}}/elastic-agent.reference.yml:
        source: 'elastic-agent.reference.yml'
        mode: 0644
      /etc/{{.BeatName}}/elastic-agent.yml:
        source: 'elastic-agent.yml'
        mode: 0600
        config: true
      /etc/{{.BeatName}}/otel.yml:
        source: 'otel.yml'
        mode: 0600
        config: true
      /etc/{{.BeatName}}/.elastic-agent.active.commit:
        content: >
          {{ commit }}
        mode: 0644
      /usr/share/{{.BeatName}}/bin/{{.BeatName}}-god:
        source: build/golang-crossbuild/god-{{.GOOS}}-{{.Platform.Arch}}
        mode: 0755
      /usr/bin/{{.BeatName}}:
        template: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/linux/elastic-agent.sh.tmpl'
        mode: 0755
      /lib/systemd/system/{{.BeatServiceName}}.service:
        template: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/linux/elastic-agent.unit.tmpl'
        mode: 0644
      /etc/init.d/{{.BeatServiceName}}:
        template: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/{{.PackageType}}/elastic-agent.init.sh.tmpl'
        mode: 0755
      /var/lib/{{.BeatName}}/data/{{.BeatName}}-{{agent_package_version}}{{snapshot_suffix}}-{{ commit_short }}/{{.BeatName}}{{.BinaryExt}}:
        source: build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}
        mode: 0755
      /var/lib/{{.BeatName}}/data/{{.BeatName}}-{{agent_package_version}}{{snapshot_suffix}}-{{ commit_short }}/package.version:
        content: >
          {{ agent_package_version }}
        mode: 0644
      /var/lib/{{.BeatName}}/data/{{.BeatName}}-{{agent_package_version}}{{snapshot_suffix}}-{{ commit_short }}/components:
        source: '{{.AgentDropPath}}/{{.GOOS}}-{{.AgentArchName}}.tar.gz/'
        mode: 0755
        config_mode: 0644
        skip_on_missing: true
      /var/lib/{{.BeatName}}/data/{{.BeatName}}-{{agent_package_version}}{{snapshot_suffix}}-{{ commit_short }}/manifest.yaml:
        mode: 0644
        content: >
          {{ manifest }}

  # MacOS pkg spec for community beats.
  - &macos_agent_pkg_spec
    <<: *common
    extra_vars:
      # OS X 10.11 El Capitan is the oldest supported by Go 1.14.
      # https://golang.org/doc/go1.14#ports
      min_supported_osx_version: 10.11
      identifier: 'co.{{.BeatVendor | tolower}}.beats.{{.BeatName}}'
      install_path: /Library/Application Support
    pre_install_script: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/darwin/scripts/preinstall.tmpl'
    post_install_script: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/darwin/scripts/postinstall.elastic-agent.tmpl'
    files:
      /Library/Application Support/{{.BeatVendor}}/{{.BeatName}}/bin/{{.BeatName}}{{.BinaryExt}}:
        source: build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}
        mode: 0755
      /Library/Application Support/{{.BeatVendor}}/{{.BeatName}}/LICENSE.txt:
        source: '{{ repo.RootDir }}/LICENSE.txt'
        mode: 0644
      /Library/Application Support/{{.BeatVendor}}/{{.BeatName}}/NOTICE.txt:
        source: '{{ repo.RootDir }}/NOTICE.txt'
        mode: 0644
      /Library/Application Support/{{.BeatVendor}}/{{.BeatName}}/README.md:
        template: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/common/README.md.tmpl'
        mode: 0644
      /Library/Application Support/{{.BeatVendor}}/{{.BeatName}}/.build_hash.txt:
        content: >
          {{ commit }}
        mode: 0644
      /Library/Application Support/{{.BeatVendor}}/{{.BeatName}}/{{.identifier}}.plist:
        template: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/darwin/launchd-daemon.plist.tmpl'
        mode: 0644
      /etc/{{.BeatName}}/elastic-agent.reference.yml:
        source: 'elastic-agent.reference.yml'
        mode: 0644
      /etc/{{.BeatName}}/elastic-agent.yml:
        source: 'elastic-agent.yml'
        mode: 0600
        config: true
      /etc/{{.BeatName}}/otel.yml:
        source: 'otel.yml'
        mode: 0600
        config: true
      /etc/{{.BeatName}}/.elastic-agent.active.commit:
        content: >
          {{ commit }}
        mode: 0644
      /etc/{{.BeatName}}/data/{{.BeatName}}-{{ commit_short }}/{{.BeatName}}{{.BinaryExt}}:
        source: build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}
        mode: 0755
      /etc/{{.BeatName}}/data/{{.BeatName}}-{{ commit_short }}/components:
        source: '{{.AgentDropPath}}/{{.GOOS}}-{{.AgentArchName}}.tar.gz/'
        mode: 0755
        config_mode: 0644
        skip_on_missing: true
  
  - &linux_otel_files
    'otelcol':
      source: '{{ repo.RootDir }}/dev-tools/packaging/files/linux/otelcol.sh'
      mode: 0755
    'data/{{.BeatName}}-{{ commit_short }}/otelcol':
      source: '{{ repo.RootDir }}/dev-tools/packaging/files/linux/otelcol.sh'
      mode: 0755

  - &agent_binary_common_files
    LICENSE.txt:
      source: '{{ repo.RootDir }}/LICENSE.txt'
      mode: 0644
    NOTICE.txt:
      source: '{{ repo.RootDir }}/NOTICE.txt'
      mode: 0644
    README.md:
      template: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/common/README.md.tmpl'
      mode: 0644
    .build_hash.txt:
      content: >
        {{ commit }}
      mode: 0644
    'elastic-agent.reference.yml':
      source: 'elastic-agent.reference.yml'
      mode: 0644
    'elastic-agent.yml':
      source: 'elastic-agent.yml'
      mode: 0600
      config: true
    'otel.yml':
      source: 'otel.yml'
      mode: 0600
      config: true
    '.elastic-agent.active.commit':
      content: >
        {{ commit }}
      mode: 0644
    'manifest.yaml':
      mode: 0644
      content: >
        {{ manifest }}

  - &agent_binary_files
    '{{.BeatName}}{{.BinaryExt}}':
      source: build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}
      mode: 0755
    'data/{{.BeatName}}-{{ commit_short }}/{{.BeatName}}{{.BinaryExt}}':
      source: build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}
      mode: 0755
    'data/{{.BeatName}}-{{ commit_short }}/package.version':
      content: >
        {{ agent_package_version }}
      mode: 0644
    <<: *agent_binary_common_files

  - &agent_darwin_app_bundle_files
    'data/{{.BeatName}}-{{ commit_short }}/elastic-agent.app/Contents/Info.plist':
      template: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/darwin/Info.plist.tmpl'
      mode: 0644
    'data/{{.BeatName}}-{{ commit_short }}/elastic-agent.app/Contents/PkgInfo':
      template: '{{ elastic_beats_dir }}/dev-tools/packaging/files/darwin/PkgInfo'
      mode: 0644

  - &agent_darwin_binary_files
    '{{.BeatName}}{{.BinaryExt}}':
      source: build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}
      mode: 0755
    'data/{{.BeatName}}-{{ commit_short }}/elastic-agent.app/Contents/MacOS/{{.BeatName}}{{.BinaryExt}}':
      source: build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}
      mode: 0755
    'data/{{.BeatName}}-{{ commit_short }}/package.version':
      content: >
        {{ agent_package_version }}
      mode: 0644
    'otelcol':
      source: '{{ repo.RootDir }}/dev-tools/packaging/files/darwin/otelcol.sh'
      mode: 0755
    'data/{{.BeatName}}-{{ commit_short }}/otelcol':
      source: '{{ repo.RootDir }}/dev-tools/packaging/files/darwin/otelcol.sh'
      mode: 0755
    <<: *agent_darwin_app_bundle_files
    <<: *agent_binary_common_files

  - &agent_components
    'data/{{.BeatName}}-{{ commit_short }}/components':
      source: '{{.AgentDropPath}}/{{.GOOS}}-{{.AgentArchName}}.tar.gz/'
      mode: 0755
      config_mode: 0644
      skip_on_missing: true

  # Binary package spec (tar.gz for linux) for community beats.
  - &agent_binary_spec
    <<: *common
    files:
      <<: *agent_binary_files
      <<: *agent_components
      <<: *linux_otel_files


  - &agent_darwin_binary_spec
    <<: *common
    files:
      <<: *agent_darwin_binary_files
      <<: *agent_components

  # Binary package spec (zip for windows) for community beats.
  - &agent_windows_binary_spec
    <<: *common
    files:
      <<: *agent_binary_files
      'data/{{.BeatName}}-{{ commit_short }}/components':
        source: '{{.AgentDropPath}}/{{.GOOS}}-{{.AgentArchName}}.zip/'
        mode: 0755
        config_mode: 0644
        skip_on_missing: true
      'otelcol.ps1':
        source: '{{ repo.RootDir }}/dev-tools/packaging/files/windows/otelcol.ps1'
        mode: 0755
      'data/{{.BeatName}}-{{ commit_short }}/otelcol.ps1':
        source: '{{ repo.RootDir }}/dev-tools/packaging/files/windows/otelcol.ps1'
        mode: 0755

  - &agent_docker_spec
    <<: *agent_binary_spec
    extra_vars:
      from: 'ubuntu:20.04'
      buildFrom: 'ubuntu:20.04'
      dockerfile: 'Dockerfile.elastic-agent.tmpl'
      docker_entrypoint: 'docker-entrypoint.elastic-agent.tmpl'
      user: '{{ .BeatName }}'
      linux_capabilities: ''
      image_name: ''
      beats_install_path: "install"
    files:
      'elastic-agent.yml':
        source: 'elastic-agent.docker.yml'
        mode: 0600
        config: true
      'otel.yml':
        source: 'otel.yml'
        mode: 0600
        config: true
      '.elastic-agent.active.commit':
        content: >
          {{ commit }}
        mode: 0644

  - &agent_docker_arm_spec
    <<: *agent_docker_spec
    extra_vars:
      from: 'arm64v8/ubuntu:20.04'
      buildFrom: 'arm64v8/ubuntu:20.04'

  - &agent_docker_cloud_spec
    <<: *agent_docker_spec
    extra_vars:
      image_name: '{{.BeatName}}-cloud'
      repository: 'docker.elastic.co/beats-ci'
    files:
      'data/cloud_downloads/filebeat.sh':
        source: '{{ elastic_beats_dir }}/dev-tools/packaging/files/linux/filebeat.sh'
        mode: 0755
      'data/cloud_downloads/metricbeat.sh':
        source: '{{ elastic_beats_dir }}/dev-tools/packaging/files/linux/metricbeat.sh'
        mode: 0755
      'data/cloud_downloads/agentbeat-{{ beat_version }}{{if .Snapshot}}-SNAPSHOT{{end}}-{{.GOOS}}-{{.AgentArchName}}.tar.gz':
        source: '{{.AgentDropPath}}/archives/{{.GOOS}}-{{.AgentArchName}}.tar.gz/agentbeat-{{ beat_version }}{{if .Snapshot}}-SNAPSHOT{{end}}-{{.GOOS}}-{{.AgentArchName}}.tar.gz'
        mode: 0755

  - &agent_docker_complete_spec
    <<: *agent_docker_spec
    extra_vars:
      image_name: '{{.BeatName}}-complete'

  # Deb/RPM spec for community beats.
  - &deb_rpm_spec
    <<: *common
    post_install_script: '{{ elastic_beats_dir }}/dev-tools/packaging/files/linux/systemd-daemon-reload.sh'
    files:
      /usr/share/{{.BeatName}}/bin/{{.BeatName}}{{.BinaryExt}}:
        source: build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}
        mode: 0755
      /etc/{{.BeatName}}/fields.yml:
        source: fields.yml
        mode: 0644
      /usr/share/{{.BeatName}}/LICENSE.txt:
        source: '{{ repo.RootDir }}/LICENSE.txt'
        mode: 0644
      /usr/share/{{.BeatName}}/NOTICE.txt:
        source: '{{ repo.RootDir }}/NOTICE.txt'
        mode: 0644
      /usr/share/{{.BeatName}}/README.md:
        template: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/common/README.md.tmpl'
        mode: 0644
      /usr/share/{{.BeatName}}/.build_hash.txt:
        content: >
          {{ commit }}
        mode: 0644
      /etc/{{.BeatName}}/{{.BeatName}}.reference.yml:
        source: '{{.BeatName}}.reference.yml'
        mode: 0644
      /etc/{{.BeatName}}/{{.BeatName}}.yml:
        source: '{{.BeatName}}.yml'
        mode: 0600
        config: true
      /usr/share/{{.BeatName}}/kibana:
        source: _meta/kibana.generated
        mode: 0644
      /usr/share/{{.BeatName}}/bin/{{.BeatName}}-god:
        source: build/golang-crossbuild/god-{{.GOOS}}-{{.Platform.Arch}}
        mode: 0755
      /usr/bin/{{.BeatName}}:
        template: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/linux/beatname.sh.tmpl'
        mode: 0755
      /lib/systemd/system/{{.BeatServiceName}}.service:
        template: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/linux/systemd.unit.tmpl'
        mode: 0644
      /etc/init.d/{{.BeatServiceName}}:
        template: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/{{.PackageType}}/init.sh.tmpl'
        mode: 0755

  # MacOS pkg spec for community beats.
  - &macos_beat_pkg_spec
    <<: *common
    extra_vars:
      # OS X 10.8 Mountain Lion is the oldest supported by Go 1.10.
      # https://golang.org/doc/go1.10#ports
      min_supported_osx_version: 10.8
      identifier: 'co.{{.BeatVendor | tolower}}.beats.{{.BeatName}}'
      install_path: /Library/Application Support
    pre_install_script: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/darwin/scripts/preinstall.tmpl'
    post_install_script: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/darwin/scripts/postinstall.tmpl'
    files:
      /Library/Application Support/{{.BeatVendor}}/{{.BeatName}}/bin/{{.BeatName}}{{.BinaryExt}}:
        source: build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}
        mode: 0755
      /Library/Application Support/{{.BeatVendor}}/{{.BeatName}}/LICENSE.txt:
        source: '{{ repo.RootDir }}/LICENSE.txt'
        mode: 0644
      /Library/Application Support/{{.BeatVendor}}/{{.BeatName}}/NOTICE.txt:
        source: '{{ repo.RootDir }}/NOTICE.txt'
        mode: 0644
      /Library/Application Support/{{.BeatVendor}}/{{.BeatName}}/README.md:
        template: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/common/README.md.tmpl'
        mode: 0644
      /Library/Application Support/{{.BeatVendor}}/{{.BeatName}}/.build_hash.txt:
        content: >
          {{ commit }}
        mode: 0644
      /Library/Application Support/{{.BeatVendor}}/{{.BeatName}}/{{.identifier}}.plist:
        template: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/darwin/launchd-daemon.plist.tmpl'
        mode: 0644
      /Library/Application Support/{{.BeatVendor}}/{{.BeatName}}/kibana:
        source: _meta/kibana.generated
        mode: 0644
      /etc/{{.BeatName}}/fields.yml:
        source: fields.yml
        mode: 0644
      /etc/{{.BeatName}}/{{.BeatName}}.reference.yml:
        source: '{{.BeatName}}.reference.yml'
        mode: 0644
      /etc/{{.BeatName}}/{{.BeatName}}.yml:
        source: '{{.BeatName}}.yml'
        mode: 0600
        config: true

  - &binary_files
    '{{.BeatName}}{{.BinaryExt}}':
      source: build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}
      mode: 0755
    fields.yml:
      source: fields.yml
      mode: 0644
    LICENSE.txt:
      source: '{{ repo.RootDir }}/LICENSE.txt'
      mode: 0644
    NOTICE.txt:
      source: '{{ repo.RootDir }}/NOTICE.txt'
      mode: 0644
    README.md:
      template: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/common/README.md.tmpl'
      mode: 0644
    .build_hash.txt:
      content: >
        {{ commit }}
      mode: 0644
    '{{.BeatName}}.reference.yml':
      source: '{{.BeatName}}.reference.yml'
      mode: 0644
    '{{.BeatName}}.yml':
      source: '{{.BeatName}}.yml'
      mode: 0600
      config: true
    kibana:
      source: _meta/kibana.generated
      mode: 0644

  # Binary package spec (tar.gz for linux/darwin) for community beats.
  - &binary_spec
    <<: *common
    files:
      <<: *binary_files

  # Binary package spec (zip for windows) for community beats.
  - &windows_binary_spec
    <<: *common
    files:
      <<: *binary_files
      install-service-{{.BeatName}}.ps1:
        template: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/windows/install-service.ps1.tmpl'
        mode: 0755
      uninstall-service-{{.BeatName}}.ps1:
        template: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/windows/uninstall-service.ps1.tmpl'
        mode: 0755

  - &docker_spec
    <<: *binary_spec
    extra_vars:
      from: 'ubuntu:20.04'
      buildFrom: 'ubuntu:20.04'
      user: '{{ .BeatName }}'
      linux_capabilities: ''
    files:
      '{{.BeatName}}.yml':
        source: '{{.BeatName}}.docker.yml'
        mode: 0600
        config: true

  - &docker_arm_spec
    <<: *docker_spec
    extra_vars:
      from: 'arm64v8/ubuntu:20.04'
      buildFrom: 'arm64v8/ubuntu:20.04'

  - &docker_ubi_spec
    extra_vars:
      image_name: '{{.BeatName}}-ubi'
      from: 'docker.elastic.co/ubi9/ubi-minimal'

  - &docker_arm_ubi_spec
    extra_vars:
      image_name: '{{.BeatName}}-ubi'
      from: 'registry.access.redhat.com/ubi9/ubi-minimal:9.3'

  - &elastic_docker_spec
    extra_vars:
      repository: 'docker.elastic.co/beats'

  #
  # License modifiers for Apache 2.0
  #
  - &apache_license_for_binaries
    license: "ASL 2.0"
    files:
      LICENSE.txt:
        source: '{{ repo.RootDir }}/dev-tools/licenses/APACHE-LICENSE-2.0.txt'
        mode: 0644

  - &apache_license_for_deb_rpm
    license: "ASL 2.0"
    files:
      /usr/share/{{.BeatName}}/LICENSE.txt:
        source: '{{ repo.RootDir }}/dev-tools/licenses/APACHE-LICENSE-2.0.txt'
        mode: 0644

  - &apache_license_for_macos_pkg
    license: "ASL 2.0"
    files:
      /Library/Application Support/{{.BeatVendor}}/{{.BeatName}}/LICENSE.txt:
        source: '{{ repo.RootDir }}/dev-tools/licenses/APACHE-LICENSE-2.0.txt'
        mode: 0644

  #
  # License modifiers for the Elastic License
  #
  - &elastic_license_for_binaries
    license: "Elastic License"
    files:
      LICENSE.txt:
        source: '{{ repo.RootDir }}/dev-tools/licenses/ELASTIC-LICENSE.txt'
        mode: 0644

  - &elastic_license_for_deb_rpm
    license: "Elastic License"
    files:
      /usr/share/{{.BeatName}}/LICENSE.txt:
        source: '{{ repo.RootDir }}/dev-tools/licenses/ELASTIC-LICENSE.txt'
        mode: 0644

  - &elastic_license_for_macos_pkg
    license: "Elastic License"
    files:
      /Library/Application Support/{{.BeatVendor}}/{{.BeatName}}/LICENSE.txt:
        source: '{{ repo.RootDir }}/dev-tools/licenses/ELASTIC-LICENSE.txt'
        mode: 0644

# specs is a list of named packaging "flavors".
specs:
  # Community Beats
  community_beat:
    - os: windows
      types: [zip]
      spec:
        <<: *windows_binary_spec

    - os: darwin
      types: [tgz]
      spec:
        <<: *binary_spec

    - os: linux
      types: [tgz]
      spec:
        <<: *binary_spec

    - os: linux
      types: [deb, rpm]
      spec:
        <<: *deb_rpm_spec

    - os: linux
      types: [docker]
      spec:
        <<: *docker_spec

    - os: aix
      types: [tgz]
      spec:
        <<: *binary_spec

  # Elastic Beat with Apache License (OSS) and binary taken the current
  # directory.
  elastic_beat_oss:
    - os: windows
      types: [zip]
      spec:
        <<: *windows_binary_spec
        <<: *apache_license_for_binaries
        name: '{{.BeatName}}-oss'

    - os: darwin
      types: [tgz]
      spec:
        <<: *binary_spec
        <<: *apache_license_for_binaries
        name: '{{.BeatName}}-oss'

    - os: linux
      types: [tgz]
      spec:
        <<: *binary_spec
        <<: *apache_license_for_binaries
        name: '{{.BeatName}}-oss'

    - os: linux
      types: [deb, rpm]
      spec:
        <<: *deb_rpm_spec
        <<: *apache_license_for_deb_rpm
        name: '{{.BeatName}}-oss'

    - os: linux
      types: [docker]
      spec:
        <<: *docker_spec
        <<: *elastic_docker_spec
        <<: *apache_license_for_binaries
        name: '{{.BeatName}}-oss'

    - os: aix
      types: [tgz]
      spec:
        <<: *binary_spec
        <<: *apache_license_for_binaries
        name: '{{.BeatName}}-oss'

  # Elastic Beat with Elastic License and binary taken the current directory.
  elastic_beat_xpack:
    ###
    # Elastic Licensed Packages
    ###
    - os: windows
      types: [zip]
      spec:
        <<: *windows_binary_spec
        <<: *elastic_license_for_binaries

    - os: darwin
      types: [tgz]
      spec:
        <<: *binary_spec
        <<: *elastic_license_for_binaries

    - os: linux
      types: [tgz]
      spec:
        <<: *binary_spec
        <<: *elastic_license_for_binaries

    - os: linux
      types: [deb, rpm]
      spec:
        <<: *deb_rpm_spec
        <<: *elastic_license_for_deb_rpm

    - os: linux
      arch: amd64
      types: [docker]
      spec:
        <<: *docker_spec
        <<: *elastic_docker_spec
        <<: *elastic_license_for_binaries

    - os: linux
      arch: amd64
      types: [docker]
      spec:
        <<: *docker_spec
        <<: *docker_ubi_spec
        <<: *elastic_docker_spec
        <<: *elastic_license_for_binaries

    - os: linux
      arch: arm64
      types: [docker]
      spec:
        <<: *docker_arm_spec
        <<: *elastic_docker_spec
        <<: *elastic_license_for_binaries

    - os: linux
      arch: arm64
      types: [docker]
      spec:
        <<: *docker_arm_spec
        <<: *docker_arm_ubi_spec
        <<: *elastic_docker_spec
        <<: *elastic_license_for_binaries

    - os: aix
      types: [tgz]
      spec:
        <<: *binary_spec
        <<: *elastic_license_for_binaries

  # Elastic Beat with Elastic License and binary taken the current directory.
  elastic_beat_xpack_reduced:
    ###
    # Elastic Licensed Packages
    ###
    - os: windows
      types: [zip]
      spec:
        <<: *windows_binary_spec
        <<: *elastic_license_for_binaries

    - os: darwin
      types: [tgz]
      spec:
        <<: *binary_spec
        <<: *elastic_license_for_binaries

    - os: linux
      types: [tgz]
      spec:
        <<: *binary_spec
        <<: *elastic_license_for_binaries

    - os: aix
      types: [tgz]
      spec:
        <<: *binary_spec
        <<: *elastic_license_for_binaries

  # Elastic Beat with Elastic License and binary taken from the x-pack dir.
  elastic_beat_xpack_separate_binaries:
    ###
    # Elastic Licensed Packages
    ###
    - os: windows
      types: [zip]
      spec:
        <<: *windows_binary_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./{{.XPackDir}}/{{.BeatName}}/build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    - os: darwin
      types: [tgz]
      spec:
        <<: *binary_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./{{.XPackDir}}/{{.BeatName}}/build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    - os: linux
      types: [tgz]
      spec:
        <<: *binary_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./{{.XPackDir}}/{{.BeatName}}/build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    - os: linux
      types: [deb, rpm]
      spec:
        <<: *deb_rpm_spec
        <<: *elastic_license_for_deb_rpm
        files:
          /usr/share/{{.BeatName}}/bin/{{.BeatName}}{{.BinaryExt}}:
            source: ./{{.XPackDir}}/{{.BeatName}}/build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    - os: linux
      arch: amd64
      types: [docker]
      spec:
        <<: *docker_spec
        <<: *elastic_docker_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./{{.XPackDir}}/{{.BeatName}}/build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    - os: linux
      arch: amd64
      types: [docker]
      spec:
        <<: *docker_spec
        <<: *docker_ubi_spec
        <<: *elastic_docker_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./{{.XPackDir}}/{{.BeatName}}/build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    - os: linux
      arch: arm64
      types: [docker]
      spec:
        <<: *docker_arm_spec
        <<: *elastic_docker_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./{{.XPackDir}}/{{.BeatName}}/build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    - os: linux
      arch: arm64
      types: [docker]
      spec:
        <<: *docker_arm_spec
        <<: *docker_arm_ubi_spec
        <<: *elastic_docker_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./{{.XPackDir}}/{{.BeatName}}/build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    - os: aix
      types: [tgz]
      spec:
        <<: *binary_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./{{.XPackDir}}/{{.BeatName}}/build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

  # Elastic Beat with Elastic License and binary taken from the x-pack dir.
  elastic_beat_agent_binaries:
    ###
    # Elastic Licensed Packages
    ###
    - os: windows
      types: [zip]
      spec:
        <<: *agent_windows_binary_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}
          'package.version':
            content: >
              {{ agent_package_version }}
            mode: 0644

    - os: darwin
      types: [tgz]
      spec:
        <<: *agent_darwin_binary_spec
        <<: *elastic_license_for_binaries
        files:
          'data/{{.BeatName}}-{{ commit_short }}/elastic-agent':
            template: '{{ elastic_beats_dir }}/dev-tools/packaging/templates/darwin/elastic-agent.tmpl'
            mode: 0755
          '{{.BeatName}}{{.BinaryExt}}':
            source: data/{{.BeatName}}-{{ commit_short }}/elastic-agent.app/Contents/MacOS/{{.BeatName}}{{.BinaryExt}}
            symlink: true
            mode: 0755

    - os: linux
      types: [tgz]
      spec:
        <<: *agent_binary_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: data/{{.BeatName}}-{{ commit_short }}/{{.BeatName}}{{.BinaryExt}}
            symlink: true
            mode: 0755

    - os: linux
      types: [deb, rpm]
      spec:
        <<: *deb_rpm_agent_spec
        <<: *elastic_license_for_deb_rpm

    - os: linux
      arch: amd64
      types: [docker]
      spec:
        <<: *agent_docker_spec
        <<: *elastic_docker_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    # Complete image gets a 'complete' variant for synthetics and other large
    # packages too big to fit in the main image
    - os: linux
      arch: amd64
      types: [docker]
      spec:
        <<: *agent_docker_spec
        <<: *agent_docker_complete_spec
        <<: *elastic_docker_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    # Cloud specific docker image
    - os: linux
      arch: amd64
      types: [docker]
      spec:
        <<: *elastic_docker_spec
        <<: *agent_docker_spec
        <<: *agent_docker_cloud_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    - os: linux
      arch: amd64
      types: [docker]
      spec:
        <<: *agent_docker_spec
        <<: *docker_ubi_spec
        <<: *elastic_docker_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    - os: linux
      arch: arm64
      types: [docker]
      spec:
        <<: *agent_docker_arm_spec
        <<: *elastic_docker_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    # Complete image gets a 'complete' variant for synthetics and other large
    # packages too big to fit in the main image
    - os: linux
      arch: arm64
      types: [docker]
      spec:
        <<: *agent_docker_arm_spec
        <<: *agent_docker_complete_spec
        <<: *elastic_docker_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    # Cloud specific docker image
    - os: linux
      arch: arm64
      types: [docker]
      spec:
        <<: *elastic_docker_spec
        <<: *agent_docker_arm_spec
        <<: *agent_docker_cloud_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    - os: linux
      arch: arm64
      types: [docker]
      spec:
        <<: *agent_docker_arm_spec
        <<: *docker_arm_ubi_spec
        <<: *elastic_docker_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    - os: aix
      types: [tgz]
      spec:
        <<: *agent_binary_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: data/{{.BeatName}}-{{ commit_short }}/{{.BeatName}}{{.BinaryExt}}
            symlink: true
            mode: 0755


  # Elastic Beat with Elastic License and binary taken from the x-pack dir.
  elastic_beat_agent_demo_binaries:
    ###
    # Elastic Licensed Packages
    ###

    - os: linux
      types: [tgz]
      spec:
        <<: *agent_binary_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    - os: linux
      types: [docker]
      spec:
        <<: *agent_docker_spec
        <<: *elastic_docker_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    - os: aix
      types: [tgz]
      spec:
        <<: *agent_binary_spec
        <<: *elastic_license_for_binaries
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}


  elastic_agent_core:
    ###
    # Elastic Licensed Core Packages
    ###
    - os: windows
      types: [zip]
      spec:
        <<: *common
        <<: *elastic_license_for_binaries
        version: '{{ beat_version }}'
        qualifier: core
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    - os: darwin
      types: [tgz]
      spec:
        <<: *common
        <<: *elastic_license_for_binaries
        version: '{{ beat_version }}'
        qualifier: core
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    - os: linux
      types: [tgz]
      spec:
        <<: *common
        <<: *elastic_license_for_binaries
        version: '{{ beat_version }}'
        qualifier: core
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}

    - os: aix
      types: [tgz]
      spec:
        <<: *common
        <<: *elastic_license_for_binaries
        version: '{{ beat_version }}'
        qualifier: core
        files:
          '{{.BeatName}}{{.BinaryExt}}':
            source: ./build/golang-crossbuild/{{.BeatName}}-{{.GOOS}}-{{.Platform.Arch}}{{.BinaryExt}}
