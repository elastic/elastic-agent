#!/usr/bin/env python3
import argparse
import os
import re
import sys
from subprocess import check_call

vendored_elastic_agent = os.path.normpath("vendor/github.com/elastic/elastic-agent")


goversion_var_elastic_agent = "defaultAgentVersion"		# version in agent
goversion_var = "appVersion"						# version for custom beats


def get_rootfolder():
    vendored_elastic_agent = os.path.normpath("vendor/github.com/elastic/elastic-agent")
    script_directory = os.path.abspath(os.path.dirname(os.path.realpath(__file__)))
    index = script_directory.find(vendored_elastic_agent)
    if index > 0:
        # Community beat detected, version files are stored at the root folder of the project
        return os.path.abspath(script_directory[:index])

    # Libbeat detected
    return os.path.dirname(script_directory)

def replace_in_file(filename, version):    
    with open(filename, 'w') as f:
        f.write(version)
            
    print ("Set version {} in file {}".format(version, filename))

def main():
    parser = argparse.ArgumentParser(
        description="Used to set the current version. Doesn't commit changes.")
    parser.add_argument("version",
                        help="The new version")
    args = parser.parse_args()
    version = args.version    
    goversion_filepath  = os.path.join(get_rootfolder(), "version", ".agent-version")
    # Update version/.agent-version file
    replace_in_file(goversion_filepath, version)

if __name__ == "__main__":
    main()

