apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: elastic-agent
  name: elastic-agent-service-account
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    k8s-app: elastic-agent
  name: elastic-agent-role-leases
  namespace: kube-system
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - create
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: elastic-agent
  name: elastic-agent-cluster-role
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - namespaces
  - events
  - pods
  - services
  - configmaps
  - serviceaccounts
  - persistentvolumes
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  - deployments
  - replicasets
  - daemonsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/stats
  verbs:
  - get
- apiGroups:
  - batch
  resources:
  - jobs
  - cronjobs
  verbs:
  - get
  - list
  - watch
- nonResourceURLs:
  - /metrics
  verbs:
  - get
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  - rolebindings
  - roles
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    k8s-app: elastic-agent
  name: elastic-agent-role-binding-leases
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: elastic-agent-role-leases
subjects:
- kind: ServiceAccount
  name: elastic-agent-service-account
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: elastic-agent
  name: elastic-agent-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: elastic-agent-cluster-role
subjects:
- kind: ServiceAccount
  name: elastic-agent-service-account
  namespace: kube-system
---
apiVersion: v1
data:
  FLEET_ENROLLMENT_TOKEN: RHlQMHVZVUJQRm5CejFaZHpiUkQ6LVltLUxPdXNUbWFhbXZEWGxPc3RUUQ==
  FLEET_URL: https://fleet-server:8220
kind: ConfigMap
metadata:
  labels:
    k8s-app: elastic-agent
  name: elastic-agent-fleet-configs-kd6c787kk4
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: elastic-agent
  name: elastic-agent-daemonset
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: elastic-agent
  template:
    metadata:
      labels:
        k8s-app: elastic-agent
    spec:
      containers:
      - env:
        - name: FLEET_ENROLL
          value: "1"
        - name: FLEET_INSECURE
          value: "true"
        - name: KIBANA_HOST
          value: http://kibana:5601
        - name: KIBANA_FLEET_USERNAME
          value: elastic
        - name: KIBANA_FLEET_PASSWORD
          value: changeme
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        envFrom:
        - configMapRef:
            name: elastic-agent-fleet-configs-kd6c787kk4
        image: docker.elastic.co/beats/elastic-agent:8.6.0
        name: elastic-agent
        resources:
          limits:
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /hostfs/proc
          name: proc
          readOnly: true
        - mountPath: /hostfs/sys/fs/cgroup
          name: cgroup
          readOnly: true
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - mountPath: /var/log
          name: varlog
          readOnly: true
        - mountPath: /hostfs/etc
          name: etc-full
          readOnly: true
        - mountPath: /hostfs/var/lib
          name: var-lib
          readOnly: true
        - mountPath: /etc/machine-id
          name: etc-mid
          readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      hostPID: true
      serviceAccountName: elastic-agent-service-account
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - hostPath:
          path: /proc
        name: proc
      - hostPath:
          path: /sys/fs/cgroup
        name: cgroup
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /etc
        name: etc-full
      - hostPath:
          path: /var/lib
        name: var-lib
      - hostPath:
          path: /etc/machine-id
          type: File
        name: etc-mid
