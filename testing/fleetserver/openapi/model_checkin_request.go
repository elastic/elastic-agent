/*
 * fleet-server API
 *
 * The fleet-server API that is used by agents when enrolled with fleet.  Note that the current implementations in the fleet-server and elastic-agent may have some difference specifically when it comes to some objects. This is most notable when comparing the `Action` implementations. Fleet-server uses a general template for all actions and the elastic-agent will have more specific representations.  The implementation of fleet-server by default also includes a connection count limiter, as well as limiters for request body sizes. If an agent attempts to make request but there are no remaining connections, the attempt will be blocked and the agent will get an error. If an agent tries to send a body that is too large the fleet-server will respond with a 400 status code. 
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type CheckinRequest struct {

	// The agent state, inferred from agent control protocol states.
	Status string `json:"status"`

	// State message, may be overridden or use the error message of a failing component.
	Message string `json:"message"`

	// The ack_token form a previous response if the agent has checked in before. Translated to a sequence number in fleet-server in order to retrieve any new actions for the agent from the last checkin. 
	AckToken string `json:"ack_token,omitempty"`

	// An embedded JSON object that holds meta-data values. Defined in fleet-server as a `json.RawMessage`, defined as an object in the elastic-agent. elastic-agent will populate the object with information from the binary and host/system environment. fleet-server will update the agent record if a checkin response contains different data from the record. 
	LocalMetadata string `json:"local_metadata,omitempty"`

	// An embedded JSON object that holds component information that the agent is running. Defined in fleet-server as a `json.RawMessage`, defined as an object in the elastic-agent. fleet-server will update the components in an agent record if they differ from this object. 
	Components string `json:"components,omitempty"`

	// An optional timeout value that informs fleet-server of when a client will time out on it's checkin request. If not specified fleet-server will use the timeout values specified in the config (defaults to 5m polling and a 10m write timeout). The value, if specified is expected to be a string that is parsable by [time.ParseDuration](https://pkg.go.dev/time#ParseDuration). If specified fleet-server will set its poll timeout to `max(1m, poll_timeout-2m)` and its write timeout to `max(2m, poll_timout-1m)`. 
	PollTimeout string `json:"poll_timeout,omitempty"`
}

// AssertCheckinRequestRequired checks if the required fields are not zero-ed
func AssertCheckinRequestRequired(obj CheckinRequest) error {
	elements := map[string]interface{}{
		"status": obj.Status,
		"message": obj.Message,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseCheckinRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CheckinRequest (e.g. [][]CheckinRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCheckinRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCheckinRequest, ok := obj.(CheckinRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCheckinRequestRequired(aCheckinRequest)
	})
}
