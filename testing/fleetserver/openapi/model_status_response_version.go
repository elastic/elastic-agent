/*
 * fleet-server API
 *
 * The fleet-server API that is used by agents when enrolled with fleet.  Note that the current implementations in the fleet-server and elastic-agent may have some difference specifically when it comes to some objects. This is most notable when comparing the `Action` implementations. Fleet-server uses a general template for all actions and the elastic-agent will have more specific representations.  The implementation of fleet-server by default also includes a connection count limiter, as well as limiters for request body sizes. If an agent attempts to make request but there are no remaining connections, the attempt will be blocked and the agent will get an error. If an agent tries to send a body that is too large the fleet-server will respond with a 400 status code. 
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// StatusResponseVersion - Version information included in the response to an authorized status request.
type StatusResponseVersion struct {

	// The fleet-server version.
	Number string `json:"number,omitempty"`

	// The commit that the fleet-server was built from.
	BuildHash string `json:"build_hash,omitempty"`

	// The date-time that the fleet-server binary was created.
	BuildTime string `json:"build_time,omitempty"`
}

// AssertStatusResponseVersionRequired checks if the required fields are not zero-ed
func AssertStatusResponseVersionRequired(obj StatusResponseVersion) error {
	return nil
}

// AssertRecurseStatusResponseVersionRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of StatusResponseVersion (e.g. [][]StatusResponseVersion), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseStatusResponseVersionRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aStatusResponseVersion, ok := obj.(StatusResponseVersion)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertStatusResponseVersionRequired(aStatusResponseVersion)
	})
}
