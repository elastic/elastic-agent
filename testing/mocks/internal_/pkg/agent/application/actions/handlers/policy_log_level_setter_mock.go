// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by mockery v2.42.2. DO NOT EDIT.

package handlers

import (
	context "context"

	logp "github.com/elastic/elastic-agent-libs/logp"
	mock "github.com/stretchr/testify/mock"
)

// PolicyLogLevelSetter is an autogenerated mock type for the policyLogLevelSetter type
type PolicyLogLevelSetter struct {
	mock.Mock
}

type PolicyLogLevelSetter_Expecter struct {
	mock *mock.Mock
}

func (_m *PolicyLogLevelSetter) EXPECT() *PolicyLogLevelSetter_Expecter {
	return &PolicyLogLevelSetter_Expecter{mock: &_m.Mock}
}

// SetPolicyLogLevel provides a mock function with given fields: ctx, lvl
func (_m *PolicyLogLevelSetter) SetPolicyLogLevel(ctx context.Context, lvl *logp.Level) error {
	ret := _m.Called(ctx, lvl)

	if len(ret) == 0 {
		panic("no return value specified for SetPolicyLogLevel")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *logp.Level) error); ok {
		r0 = rf(ctx, lvl)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PolicyLogLevelSetter_SetPolicyLogLevel_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetPolicyLogLevel'
type PolicyLogLevelSetter_SetPolicyLogLevel_Call struct {
	*mock.Call
}

// SetPolicyLogLevel is a helper method to define mock.On call
//   - ctx context.Context
//   - lvl *logp.Level
func (_e *PolicyLogLevelSetter_Expecter) SetPolicyLogLevel(ctx interface{}, lvl interface{}) *PolicyLogLevelSetter_SetPolicyLogLevel_Call {
	return &PolicyLogLevelSetter_SetPolicyLogLevel_Call{Call: _e.mock.On("SetPolicyLogLevel", ctx, lvl)}
}

func (_c *PolicyLogLevelSetter_SetPolicyLogLevel_Call) Run(run func(ctx context.Context, lvl *logp.Level)) *PolicyLogLevelSetter_SetPolicyLogLevel_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*logp.Level))
	})
	return _c
}

func (_c *PolicyLogLevelSetter_SetPolicyLogLevel_Call) Return(_a0 error) *PolicyLogLevelSetter_SetPolicyLogLevel_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *PolicyLogLevelSetter_SetPolicyLogLevel_Call) RunAndReturn(run func(context.Context, *logp.Level) error) *PolicyLogLevelSetter_SetPolicyLogLevel_Call {
	_c.Call.Return(run)
	return _c
}

// NewPolicyLogLevelSetter creates a new instance of PolicyLogLevelSetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPolicyLogLevelSetter(t interface {
	mock.TestingT
	Cleanup(func())
}) *PolicyLogLevelSetter {
	mock := &PolicyLogLevelSetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
