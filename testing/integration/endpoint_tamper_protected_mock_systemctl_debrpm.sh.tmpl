#!/bin/bash

echo "[mock] systemctl $@"

ASSERTIONS="{{ .AssertionsPath }}"
SERVICE_NAME="ElasticEndpoint"
SERVICE_STOP_ASSERTION="{{ .ServiceStopAssertion }}"
SERVICE_START_ASSERTION="{{ .ServiceStartAssertion }}"
REAL_SYSTEMCTL="/usr/bin/systemctl.real"

SHOULD_WRITE=true

if [[ -z "$ASSERTIONS" ]]; then
  echo "ASSERTIONS file path is not provided"
  SHOULD_WRITE=false

elif [[ ! -f "$ASSERTIONS" ]]; then
  echo "ASSERTIONS file at $ASSERTIONS does not exist"
  SHOULD_WRITE=false

elif [[ ! -w "$ASSERTIONS" ]]; then
  echo "ASSERTIONS file at $ASSERTIONS is not writable"
  SHOULD_WRITE=false
fi

if [[ "$2" == "stop" && "$3" == "$SERVICE_NAME" ]]; then # systemctl --quiet stop ElasticEndpoint
    echo "[mock] Actually stopping $2"
    "$REAL_SYSTEMCTL" stop "$SERVICE_NAME"

    if $SHOULD_WRITE ; then
        echo "$SERVICE_STOP_ASSERTION" >> "$ASSERTIONS"
    fi

    echo "[mock] Simulating failure after stop"
    exit 1

elif [[ "$2" == "start" && "$3" == "$SERVICE_NAME" ]]; then # systemctl --quiet start ElasticEndpoint
    echo "[mock] Actually starting $2"
    "$REAL_SYSTEMCTL" start "$SERVICE_NAME"
    if $SHOULD_WRITE ; then
        echo "$SERVICE_START_ASSERTION" >> "$ASSERTIONS"
    fi
    exit 0

else
    echo "[mock] Forwarding to real systemctl for command: $@"
    exec "$REAL_SYSTEMCTL" "$@"
fi
